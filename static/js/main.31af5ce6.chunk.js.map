{"version":3,"sources":["logic/navigation/navigate-with-delay.js","ui/components/shared/links.js","ui/components/shared/page-wrapper.js","ui/components/shared/page-title.js","ui/pages/top-level/not-found-page.js","logic/state-management/store/store.js","logic/state-management/store/helpers.js","logic/state-management/authentication.js","react-auth0-spa.js","ui/components/root/app-header.js","logic/state-management/dialogs.js","logic/state-management/permissions.js","ui/components/top-level/all-targets/target-card.js","logic/state-management/api/core.js","logic/state-management/api/actions.js","logic/state-management/error-message.js","logic/state-management/api/error-lookup.js","logic/state-management/loading-helper.js","logic/state-management/api/polling.js","logic/state-management/api/hooks.js","ui/components/shared/confirm-dialog.js","ui/components/shared/target/edit-target-form.js","ui/components/shared/edit-dialog.js","ui/components/shared/target/edit-target-dialog.js","ui/components/top-level/all-targets/add-target-panel.js","ui/pages/top-level/all-targets-page.js","ui/components/shared/back-link.js","ui/components/target/overview/overview-page-title.js","ui/components/target/overview/users/edit-user-popover.js","ui/components/target/overview/users/add-user-input.js","ui/components/target/overview/users/chip-list.js","ui/components/target/overview/users/users-manager.js","ui/components/shared/caption.js","ui/components/target/overview/overview-header.js","ui/components/target/overview/horizontal-button-group.js","ui/components/target/overview/overview-summary.js","ui/components/shared/page-title-2.js","ui/components/target/overview/stats-listing.js","ui/components/target/overview/overview-stats.js","ui/pages/target/overview-page.js","ui/components/target/insert/insert-row.js","ui/components/target/insert/insert-buttons-wrapper.js","ui/pages/target/insert-page.js","ui/components/target/quotes/quotes-list-item.js","ui/components/target/quotes/quotes-list.js","ui/components/target/quotes/edit-quote-form.js","ui/components/target/quotes/quotes-add-form.js","ui/components/target/quotes/edit-quote-dialog.js","ui/pages/target/quotes-page.js","ui/pages/target/stats-page.js","ui/pages/top-level/target-nested-router.js","ui/pages/top-level/home-page.js","ui/pages/top-level/logout-page.js","ui/components/root/main-loader.js","ui/components/root/state-snackbar.js","App.js","service-worker.js","index.js"],"names":["navigateWithDelay","args","setTimeout","navigate","LinkedButton","props","Button","onClick","event","preventDefault","href","children","LinkedLink","Link","PageWrapper","Container","maxWidth","PageTitle","Box","className","Typography","variant","component","title","NotFoundPage","useTitle","style","marginBottom","color","thunkMiddleware","require","default","reducers","allStoreEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","s","injectReducer","key","reducer","replaceReducer","combineReducers","getState","storeKey","subscribe","func","lastState","makeActionName","name","initialState","isAuthenticated","user","auth0Client","loading","popupOpen","SET_IS_AUTHENTICATED","SET_USER","SET_AUTH0","SET_LOADING","SET_POPUP_OPEN","state","authenticated","useUser","useState","setState","useLayoutEffect","getTokenOnce","a","client","getTokenSilently","options","setUser","dispatch","type","payload","DEFAULT_REDIRECT_CALLBACK","history","replaceState","document","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Auth0Provider","onRedirectCallback","initOptions","setIsAuthenticated","setLoading","setPopupOpen","useAuth0Client","useEffect","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","console","error","Provider","value","getIdTokenClaims","loginWithRedirect","getTokenWithPopup","logout","useStyles","makeStyles","theme","button","margin","spacing","flexGrow","offset","mixins","toolbar","AppHeader","classes","AppBar","position","backgroundColor","height","maxProgress","showFastActions","Toolbar","SHOW_DIALOG","HIDE_DIALOG","SET_INFO","dialogName","reassignObject","show","info","newState","Object","assign","showDialog","hideDialog","setDialogInfo","useDialogState","usePermissions","users","thisUser","isOwner","sub","owner","id","guests","find","guest","canSubmitRecords","canEdit","cardSubheader","infoCard","TargetCard","targetInfo","targetUsers","Card","CardActionArea","CardContent","description","Chip","avatar","Avatar","substring","toUpperCase","label","CardActions","size","TARGET_EDIT_DIALOG_NAME","TARGET_DELETE_DIALOG_NAME","features","MERGE_REPLACE_SHALLOW","MERGE_REPLACE_DEEP_ONLY","MERGE_INFO","MERGE_USERS","MERGE_QUOTES","MERGE_STATS","INCREASE_STATS","DECREASE_STATS","FILTER_OUT_TARGET","FILTER_OUT_USER","FILTER_OUT_QUOTE","targets","mergeReplaceShallow","produce","draft","entries","targetId","index","findIndex","item","push","quotes","stats","timeframe","quoteId","findLowestStat","userId","splice","merge","lowest","Number","MAX_SAFE_INTEGER","updateTargetsList","updateTargetsInternally","updateTarget","makeRequest","endpoints","PATCH","TARGET_id","body","SET","CLEAR","message","scope","global","setErrorMessage","errorLookup","showLoadingBar","showLoading","hideLoadingBar","hideLoading","axios","defaults","baseURL","timeout","GET","TARGETS","url","handler","result","eps","properties","TARGET_id_USERS","oneTimePoll","shouldShowLoading","getStateOnce","TARGET_id_INFO","TARGET_id_QUOTES","TARGET_id_STATS","TARGET_id_RECORDS","records","TARGET_id_RECORDS_from_to","from","to","method","TARGET_id_QUOTE_id","TARGET_id_USER_id","POST","TARGET","TARGET_id_QUOTE","TARGET_id_USER","DELETE","TARGET_id_QUOTE_id_RECORD","poll","interval","Array","isArray","setInterval","setImmediateInterval","log","clearInterval","isPropertiesAnArray","displayLoadingBar","forEach","endpoint","token","config","headers","Authorization","requests","map","ep","get","all","then","spread","responses","response","data","status","catch","handleError","callback","JSON","stringify","textError","process","useGeneral","ConfirmDialog","Dialog","open","onClose","negativeAction","DialogTitle","DialogContent","DialogContentText","text","DialogActions","negativeText","positiveAction","positiveText","useEditTargetForm","dialogState","maxTitleLength","maxDescriptionLength","enteredTitle","setEnteredTitle","enteredDescription","setEnteredDescription","errorTitle","setErrorTitle","errorDescription","setErrorDescription","helperTextTitle","setHelperTextTitle","helperTextDescription","setHelperTextDescription","checkSave","length","clearData","element","TextField","autoFocus","fullWidth","helperText","onChange","target","multiline","marginTop","EditDialog","useTheme","fullScreen","useMediaQuery","breakpoints","down","hide","form","saveAction","EditTargetDialog","textField","width","float","spaceAtTop","AddTargetPanel","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","noValidate","autoComplete","onSubmit","current","moment","format","uuid","uuidv4","createdOn","lastVisited","createTarget","AllTargetsPage","deleteDialogState","BackLink","OverviewPageTitle","showEditIcon","IconButton","marginLeft","EditUserPopover","anchor","removeDialogState","canCurrentUserEdit","setIsOwner","setCanSubmitRecords","setCanEdit","close","Popover","anchorEl","hasChanged","updateUser","anchorOrigin","vertical","horizontal","transformOrigin","List","ListItem","ListItemText","primary","ListItemSecondaryAction","Checkbox","edge","checked","disabled","removeUser","AddUserInput","flexBoxClass","chipClass","setText","chips","setChips","failed","setFailed","searchForUser","input","tryAddUser","email","filter","elem","CircularProgress","thickness","onDelete","trim","endsWith","root","display","flexWrap","listStyle","padding","alignItems","chip","ChipList","mergedUsers","displayName","handleClick","UsersManager","setAnchor","currentTarget","Caption","OverviewHeader","permissions","HorizontalButtonGroup","buttons","OverviewSummary","quotesSummarized","amountQuotes","totalRecords","PageTitle2","StatsListing","OverviewStats","today","full","summarizeQuotes","total","values","reduce","amount","buildSimpleStats","simpleStats","OverviewPage","InsertRow","quoteText","quote","quoteCount","count","Grid","container","xs","direction","justify","sm","md","createRecord","deleteLatestRecord","InsertButtonsWrapper","InsertPage","quotesUnsub","statsUnsub","fromStore","quotesWithStats","useStats","QuotesListItem","showEdit","QUOTES_EDIT_DIALOG_NAME","showDelete","QUOTES_CONFIRM_DIALOG_NAME","QuotesList","Divider","useEditQuotesForm","maxQuoteLength","enteredText","setEnteredText","setError","setHelperText","handleChange","onSave","QuotesAddForm","onCheckedConfirm","EditQuoteDialog","QuotesPage","useQuotes","deleteQuote","updateQuote","millis","valueOf","createQuote","StatsPage","routes","tid","TargetNestedRouter","useRoutes","HomePage","LogoutPage","MainLoader","left","top","transform","Alert","elevation","StateSnackbar","errorState","useAlert","severity","actionName","action","errorMessage","useErrorMessage","latestError","setLatestError","handleClose","reason","clearErrorMessage","alert","Snackbar","autoHideDuration","Fragment","aria-label","fontSize","createMuiTheme","palette","blue","secondary","orange","publicPaths","App","path","usePath","targetUrl","awaitLogin","routeResult","ThemeProvider","bottom","Boolean","hostname","match","setBasepath","loadingBarReducer","locale","ReactDOM","render","domain","client_id","clientId","redirect_uri","origin","audience","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31af5ce6.chunk.js","sourcesContent":["import { navigate } from \"hookrouter\";\r\n\r\nconst WAIT_DELAY = 100;\r\n\r\nexport const navigateWithDelay = (...args) => {\r\n    setTimeout(() => navigate(...args), WAIT_DELAY);\r\n}\r\n\r\nexport const navigateWithCustomDelay = (delay, ...args) => {\r\n    setTimeout(() => navigate(...args), delay);\r\n};","import Button from \"@material-ui/core/Button\";\r\nimport { navigate } from \"hookrouter\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport React from \"react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { navigateWithDelay } from \"../../../logic/navigation/navigate-with-delay\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nexport const LinkedButton = (props) => {\r\n    return (\r\n        <Button {...props} onClick={event => {\r\n            event.preventDefault();\r\n            navigateWithDelay(props.href);\r\n        }}>\r\n            {props.children}\r\n        </Button>\r\n    );\r\n    //return <Button {...setLinkProps(props)}/>; //variant={props.variant} color={props.color}\r\n};\r\n\r\nexport const LinkedIconButton = (props) => {\r\n    return (\r\n        <IconButton {...props} onClick={event => { // @TODO verify with actually works like the LinkedButton\r\n            event.preventDefault();\r\n            navigateWithDelay(props.href);\r\n        }}>\r\n            {props.children}\r\n        </IconButton>\r\n    );\r\n    //return <IconButton {...setLinkProps(props)}>{props.children}</IconButton>\r\n};\r\n\r\nexport const LinkedChip = (props) => {\r\n    return <Chip {...props} onClick={event => {\r\n        event.preventDefault();\r\n        navigateWithDelay(props.href);\r\n    }}/>;\r\n    // return <Chip onClick={() => {\r\n    //     navigate(props.href);\r\n    // }} avatar={props.avatar} label={props.label} onDelete={props.onDelete} className={props.className}/>;\r\n};\r\n\r\nexport const LinkedLink = (props) => {\r\n    return <Link {...props} onClick={event => {\r\n        event.preventDefault();\r\n        navigate(props.href);\r\n    }}/>;\r\n};","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nconst PageWrapper = (props) => {\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            {props.children ? props.children : <div/>}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default PageWrapper;","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst PageTitle = (props) => {\r\n    return (\r\n        <Box className=\"page-title\">\r\n            <Typography variant=\"h3\" component=\"h1\">{props.title}{props.children}</Typography>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default PageTitle;","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { LinkedButton } from \"../../components/shared/links\";\r\nimport { useTitle } from \"hookrouter\";\r\nimport PageWrapper from \"../../components/shared/page-wrapper\";\r\nimport PageTitle from \"../../components/shared/page-title\";\r\n\r\nconst NotFoundPage = () => {\r\n    useTitle(\"404 - Nicht gefunden - quotracker\");\r\n    return (\r\n        <PageWrapper>\r\n            <PageTitle title=\"404 - Seite nicht gefunden\"/>\r\n            <Typography variant=\"body1\" style={{marginBottom: 12}}>\r\n                Sorry, die angeforderte Seite wurde leider nicht gefunden :/\r\n            </Typography>\r\n            <LinkedButton variant=\"contained\" color=\"primary\" href=\"/\">\r\n                Zur Startseite\r\n            </LinkedButton> {/* @TODO create a link to go back to the page the user came from */}\r\n        </PageWrapper>\r\n    );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\n\r\nconst thunkMiddleware = require(\"redux-thunk\").default;\r\n\r\nlet reducers = {};\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\nconst allStoreEnhancers = composeEnhancers(\r\n    applyMiddleware(thunkMiddleware),\r\n    // (window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n);\r\nexport const store = createStore(s => s, allStoreEnhancers); // allStoreEnhancers\r\n\r\nstore.injectReducer = (key, reducer) => {\r\n    reducers[key] = reducer;\r\n    store.replaceReducer(combineReducers(reducers));\r\n};","import { store } from \"./store\";\r\n\r\nexport const apiServerUrl = \"http://localhost:8080\";\r\n\r\nexport const getState = (storeKey) => store.getState()[storeKey];\r\n\r\nexport const subscribe = (storeKey, func) => {\r\n    let lastState = getState(storeKey);\r\n    return store.subscribe(() => {\r\n        if (lastState !== getState(storeKey)) {\r\n            lastState = getState(storeKey);\r\n            func(lastState);\r\n        }\r\n    });\r\n};\r\n\r\nexport const makeActionName = (storeKey, name) => `${storeKey}/${name}`;\r\n\r\nexport const setImmediateInterval = (func, interval) => {\r\n    func();\r\n    return setInterval(func, interval);\r\n};\r\n\r\n// export const makeActionNames = (storeKey, list) => {\r\n//     let result = {};\r\n//     list.forEach(item => result[item] = makeActionName(storeKey, item));\r\n//     return result;\r\n// };\r\n\r\nexport const getTestInitialState = () => (\r\n    {\r\n        \"a6bf353b-b995-49ee-9725-fb2517d8d88c\": {\r\n            \"info\": {\r\n                \"owner\": \"auth0|5e91ddc85aac980bf6392cd3\",\r\n                \"title\": \"Sloddi\",\r\n                \"description\": \"Sloddi labert in der nächsten Version. Hat Struktur und Verhalten, wie Yin und Yang. Verstehen Sie das?\",\r\n                \"createdOn\": \"2020-04-12T18:37:38.993+02:00\",\r\n                \"lastVisited\": \"2020-04-12T18:37:39.013+02:00\"\r\n            },\r\n            \"users\": {\r\n                \"owner\": {\r\n                    \"id\": \"auth0|5e91ddc85aac980bf6392cd3\",\r\n                    \"name\": \"lennart@lvideos.de\"\r\n                },\r\n                \"guests\": []\r\n            },\r\n            \"quotes\": {\r\n                \"1\": {\r\n                    \"text\": \"Verstehen Sie?\",\r\n                    \"createdOn\": \"2020-04-12T18:40:39.023+02:00\"\r\n                },\r\n                \"2\": {\r\n                    \"text\": \"... kennen Sie?\",\r\n                    \"createdOn\": \"2020-04-12T20:05:39.026+02:00\"\r\n                },\r\n                \"4\": {\r\n                    \"text\": \"Sehen Sie das?\",\r\n                    \"createdOn\": \"2020-04-29T14:32:40.262+02:00\"\r\n                },\r\n                \"6\": {\r\n                    \"text\": \"Did you get it?\",\r\n                    \"createdOn\": \"2020-04-29T14:58:40.662+02:00\"\r\n                }\r\n            },\r\n            \"stats\": {\r\n                \"today\": {\r\n                    \"1\": 0,\r\n                    \"2\": 0,\r\n                    \"4\": 0,\r\n                    \"6\": 0\r\n                },\r\n                \"full\": {\r\n                    \"1\": 23,\r\n                    \"2\": 8,\r\n                    \"4\": 3,\r\n                    \"6\": 2\r\n                }\r\n            }\r\n        },\r\n        \"384006ad-a7ba-4aff-8fe5-7ec8c96dea60\": {\r\n            \"info\": {\r\n                \"owner\": \"auth0|5e91ddc85aac980bf6392cd3\",\r\n                \"title\": \"Hallo hier!\",\r\n                \"description\": \"Vielleicht kann man die Summe der Targets über ein Integral abschätzen. Das ist aber sehr schwierig, da die Primfaktoren völlig unbekannt sind\",\r\n                \"createdOn\": \"2020-04-13T23:28:39.029+02:00\",\r\n                \"lastVisited\": \"2020-04-13T23:28:39.032+02:00\"\r\n            },\r\n            \"users\": {\r\n                \"owner\": {\r\n                    \"id\": \"auth0|5e91ddc85aac980bf6392cd3\",\r\n                    \"name\": \"lennart@lvideos.de\"\r\n                },\r\n                \"guests\": [\r\n                    {\r\n                        \"id\": \"someone\",\r\n                        \"name\": \"someone\",\r\n                        \"canSubmitRecords\": true,\r\n                        \"canEdit\": false\r\n                    }\r\n                ]\r\n            },\r\n            \"quotes\": {\r\n                \"3\": {\r\n                    \"text\": \"Jetzt hat der Hund das schon wieder nicht gemacht\",\r\n                    \"createdOn\": \"2020-04-13T23:31:39.034+02:00\"\r\n                }\r\n            },\r\n            \"stats\": {\r\n                \"today\": {\r\n                    \"3\": 0\r\n                },\r\n                \"full\": {\r\n                    \"3\": 14\r\n                }\r\n            }\r\n        },\r\n        \"0f0e136e-e709-4522-8ccf-e76b92b81764\": {\r\n            \"info\": {\r\n                \"owner\": \"someone\",\r\n                \"title\": \"Wichser\",\r\n                \"description\": \"WICHSER!!!\",\r\n                \"createdOn\": \"2020-05-01T18:17:00.748+02:00\",\r\n                \"lastVisited\": \"2020-05-01T18:17:00.748+02:00\"\r\n            },\r\n            \"users\": {\r\n                \"owner\": {\r\n                    \"id\": \"someone\",\r\n                    \"name\": \"someone\"\r\n                },\r\n                \"guests\": [\r\n                    {\r\n                        \"id\": \"auth0|5e91ddc85aac980bf6392cd3\",\r\n                        \"name\": \"lennart@lvideos.de\",\r\n                        \"canSubmitRecords\": true,\r\n                        \"canEdit\": false\r\n                    }\r\n                ]\r\n            },\r\n            \"quotes\": {\r\n                \"10\": {\r\n                    \"text\": \"Das ist ein zweiter Test\",\r\n                    \"createdOn\": \"2020-05-02T15:20:12.282+02:00\"\r\n                }\r\n            },\r\n            \"stats\": {\r\n                \"today\": {\r\n                    \"10\": 0\r\n                },\r\n                \"full\": {\r\n                    \"10\": 3\r\n                }\r\n            }\r\n        }\r\n    }\r\n);","import { useLayoutEffect, useState } from \"react\";\r\nimport { getState, makeActionName, subscribe } from \"./store/helpers\";\r\nimport { store } from \"./store/store\";\r\n\r\nconst storeKey = \"auth0\";\r\n\r\n// DEFINITIONS\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: null,\r\n    auth0Client: null,\r\n    loading: true,\r\n    popupOpen: false\r\n};\r\n\r\nconst SET_IS_AUTHENTICATED = makeActionName(storeKey, \"setIsAuthenticated\");\r\nconst SET_USER = makeActionName(storeKey, \"setUser\");\r\nconst SET_AUTH0 = makeActionName(storeKey, \"setAuth0\");\r\nconst SET_LOADING = makeActionName(storeKey, \"setLoading\");\r\nconst SET_POPUP_OPEN = makeActionName(storeKey, \"setPopupOpen\");\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nconst reducers = {\r\n    [SET_IS_AUTHENTICATED]: (state, authenticated) => ({...state, isAuthenticated: authenticated}),\r\n    [SET_USER]: (state, user) => ({...state, user: user}),\r\n    [SET_AUTH0]: (state, auth0Client) => ({...state, auth0Client: auth0Client}),\r\n    [SET_LOADING]: (state, loading) => ({...state, loading: loading}),\r\n    [SET_POPUP_OPEN]: (state, popupOpen) => ({...state, popupOpen: popupOpen})\r\n};\r\n\r\n// EXPORTS\r\nexport const useIsAuthenticated = () => {\r\n    const [state, setState] = useState(getState(storeKey));\r\n    useLayoutEffect(() => subscribe(storeKey, setState), [setState]);\r\n    return state.isAuthenticated;\r\n};\r\n\r\nexport const useUser = () => {\r\n    const [state, setState] = useState(getState(storeKey));\r\n    useLayoutEffect(() => subscribe(storeKey, setState), [setState]);\r\n    return state.user;\r\n};\r\n\r\nexport const useAuth0Client = () => {\r\n    const [state, setState] = useState(getState(storeKey));\r\n    useLayoutEffect(() => subscribe(storeKey, setState), [setState]);\r\n    return state.auth0Client;\r\n};\r\n\r\n// (cheater function for loading in the background)\r\nexport const getTokenOnce = async () => {\r\n    const client = getState(storeKey).auth0Client;\r\n    return client.getTokenSilently(client.options);\r\n};\r\n\r\nexport const useLoading = () => {\r\n    const [state, setState] = useState(getState(storeKey));\r\n    useLayoutEffect(() => subscribe(storeKey, setState), [setState]);\r\n    return state.loading;\r\n};\r\n\r\nexport const usePopupOpen = () => {\r\n    const [state, setState] = useState(getState(storeKey));\r\n    useLayoutEffect(() => subscribe(storeKey, setState), [setState]);\r\n    return state.popupOpen;\r\n};\r\n\r\nexport const setIsAuthenticated = (authenticated) =>\r\n    store.dispatch({type: SET_IS_AUTHENTICATED, payload: authenticated});\r\nexport const setUser = (user) =>\r\n    store.dispatch({type: SET_USER, payload: user});\r\nexport const setAuth0 = (client) =>\r\n    store.dispatch({type: SET_AUTH0, payload: client});\r\nexport const setLoading = (loading) =>\r\n    store.dispatch({type: SET_LOADING, payload: loading});\r\nexport const setPopupOpen = (open) =>\r\n    store.dispatch({type: SET_POPUP_OPEN, payload: open});\r\n\r\n// inject reducer\r\nstore.injectReducer(storeKey, (state = initialState, {type, payload}) =>\r\n    reducers[type] ? reducers[type](state, payload) : state\r\n);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\r\nimport {\r\n    // eslint-disable-next-line no-unused-vars\r\n    setAuth0,\r\n    // eslint-disable-next-line no-unused-vars\r\n    setIsAuthenticated,\r\n    // eslint-disable-next-line no-unused-vars\r\n    setLoading,\r\n    // eslint-disable-next-line no-unused-vars\r\n    setPopupOpen,\r\n    // eslint-disable-next-line no-unused-vars\r\n    setUser,\r\n    // eslint-disable-next-line no-unused-vars\r\n    useAuth0Client,\r\n    // eslint-disable-next-line no-unused-vars\r\n    useIsAuthenticated,\r\n    // eslint-disable-next-line no-unused-vars\r\n    useLoading,\r\n    // eslint-disable-next-line no-unused-vars\r\n    usePopupOpen,\r\n    // eslint-disable-next-line no-unused-vars\r\n    useUser\r\n} from \"./logic/state-management/authentication\";\r\n\r\nconst DEFAULT_REDIRECT_CALLBACK = () =>\r\n    window.history.replaceState({}, document.title, window.location.pathname);\r\n\r\nexport const Auth0Context = React.createContext();\r\nexport const useAuth0 = () => useContext(Auth0Context);\r\nexport const Auth0Provider = ({\r\n                                  children,\r\n                                  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\r\n                                  ...initOptions\r\n                              }) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState();\r\n    // const [user, setUser] = useState();\r\n    // const [auth0Client, setAuth0] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n    const [popupOpen, setPopupOpen] = useState(false);\r\n    // const isAuthenticated = useIsAuthenticated();\r\n    const user = useUser();\r\n    const auth0Client = useAuth0Client();\r\n    // const loading = useLoading();\r\n    // const popupOpen = usePopupOpen();\r\n\r\n    useEffect(() => {\r\n        const initAuth0 = async () => {\r\n            const auth0FromHook = await createAuth0Client(initOptions);\r\n            setAuth0(auth0FromHook);\r\n\r\n            if (window.location.search.includes(\"code=\") &&\r\n                window.location.search.includes(\"state=\")) {\r\n                const {appState} = await auth0FromHook.handleRedirectCallback();\r\n                onRedirectCallback(appState);\r\n            }\r\n\r\n            const isAuthenticated = await auth0FromHook.isAuthenticated();\r\n\r\n            setIsAuthenticated(isAuthenticated);\r\n\r\n            if (isAuthenticated) {\r\n                const user = await auth0FromHook.getUser();\r\n                setUser(user);\r\n            }\r\n\r\n            setLoading(false);\r\n        };\r\n        initAuth0();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const loginWithPopup = async (params = {}) => {\r\n        setPopupOpen(true);\r\n        try {\r\n            await auth0Client.loginWithPopup(params);\r\n        } catch (error) {\r\n            console.error(error);\r\n        } finally {\r\n            setPopupOpen(false);\r\n        }\r\n        const user = await auth0Client.getUser();\r\n        setUser(user);\r\n        setIsAuthenticated(true);\r\n    };\r\n\r\n    const handleRedirectCallback = async () => {\r\n        setLoading(true);\r\n        await auth0Client.handleRedirectCallback();\r\n        const user = await auth0Client.getUser();\r\n        setLoading(false);\r\n        setIsAuthenticated(true);\r\n        setUser(user);\r\n    };\r\n    return (\r\n        <Auth0Context.Provider\r\n            value={{\r\n                isAuthenticated,\r\n                user,\r\n                loading,\r\n                popupOpen,\r\n                loginWithPopup,\r\n                handleRedirectCallback,\r\n                getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\r\n                loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\r\n                getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\r\n                getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\r\n                logout: (...p) => auth0Client.logout(...p)\r\n            }}\r\n        >\r\n            {children}\r\n        </Auth0Context.Provider>\r\n    );\r\n};","import React, { Fragment } from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { A } from \"hookrouter\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useAuth0 } from \"../../../react-auth0-spa\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LoadingBar from \"react-redux-loading-bar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        // textDecoration: \"none\",\r\n        // color: \"white\"\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    offset: theme.mixins.toolbar,\r\n}));\r\n\r\nconst AppHeader = () => {\r\n    const classes = useStyles();\r\n    const {isAuthenticated, logout} = useAuth0();\r\n\r\n    return (\r\n        <Fragment>\r\n            <AppBar position=\"fixed\">\r\n                <LoadingBar\r\n                    style={{backgroundColor: \"red\", height: \"3px\", position: \"absolute\"}}\r\n                    maxProgress={95}\r\n                    showFastActions={false}\r\n                />\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        <A href=\"/\" className=\"link-no-style text-white\">\r\n                            quotracker\r\n                        </A>\r\n                    </Typography>\r\n                    {isAuthenticated && (\r\n                        <Box> {/* @TODO fix the issue with the tooltips */}\r\n                            {/*<Tooltip title=\"Mein Account\">*/}\r\n                            {/*    <LinkedIconButton href={\"/settings\"} color=\"inherit\">*/}\r\n                            {/*        <PersonIcon/>*/}\r\n                            {/*    </LinkedIconButton>*/}\r\n                            {/*</Tooltip>*/}\r\n                            {/*<Tooltip title=\"Einstellungen\">*/}\r\n                            {/*    <LinkedIconButton href={\"/account\"} color=\"inherit\">*/}\r\n                            {/*        <SettingsIcon/>*/}\r\n                            {/*    </LinkedIconButton>*/}\r\n                            {/*</Tooltip>*/}\r\n                            <Button onClick={() => logout()} color=\"inherit\">\r\n                                AUSLOGGEN\r\n                            </Button>\r\n                        </Box>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className={classes.offset}/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default AppHeader;\r\n","import { getState, makeActionName, subscribe } from \"./store/helpers\";\r\nimport { useLayoutEffect, useState } from \"react\";\r\nimport { store } from \"./store/store\";\r\n\r\nconst storeKey = \"dialogs\";\r\n\r\n// DEFINITOINS\r\nconst SHOW_DIALOG = makeActionName(storeKey, \"show\");\r\nconst HIDE_DIALOG = makeActionName(storeKey, \"hide\");\r\nconst SET_INFO = makeActionName(storeKey, \"setInfo\");\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nconst reducers = {\r\n    [SHOW_DIALOG]: (state, dialogName) => reassignObject(state, dialogName, {...state[dialogName], show: true}),\r\n    [HIDE_DIALOG]: (state, dialogName) => reassignObject(state, dialogName, {...state[dialogName], show: false}),\r\n    [SET_INFO]: (state, {dialogName, info}) => reassignObject(state, dialogName, {...info, show: state[dialogName]?.show}),\r\n};\r\n\r\n// HELPERS\r\nconst reassignObject = (state, key, value) => {\r\n    const newState = Object.assign({}, state);\r\n    newState[key] = value;\r\n    return newState;\r\n};\r\n\r\n// EXPORTS -- setters\r\nexport const showDialog = (dialogName) =>\r\n    store.dispatch({type: SHOW_DIALOG, payload: dialogName});\r\n// hideDialog will only be dispatched if the dialog is actually open (in order not to bloat redux timeline)\r\nexport const hideDialog = (dialogName) => {\r\n    if (getState(storeKey)[dialogName]?.show)\r\n        store.dispatch({type: HIDE_DIALOG, payload: dialogName});\r\n};\r\nexport const setDialogInfo = (dialogName, info) =>\r\n    store.dispatch({type: SET_INFO, payload: {dialogName, info}});\r\n\r\nstore.injectReducer(storeKey, (state = {}, {type, payload}) =>\r\n    reducers[type] ? reducers[type](state, payload) : state\r\n);\r\n\r\n// -- hooks\r\n/**\r\n * @param {string} dialogName\r\n * @returns {{show: {boolean}}}\r\n */\r\nexport const useDialogState = (dialogName) => {\r\n    const [state, setState] = useState(getState(storeKey));\r\n    useLayoutEffect(() => subscribe(storeKey, setState), [setState]);\r\n    return state[dialogName];\r\n};","import { useUser } from \"./authentication\";\r\n\r\nexport const usePermissions = (users) => {\r\n    const thisUser = useUser();\r\n    const isOwner = thisUser?.sub === users?.owner?.id;\r\n    const guests = users?.guests?.find(guest => guest.id === thisUser?.sub);\r\n    return {\r\n        isOwner: isOwner,\r\n        canSubmitRecords: isOwner || guests?.canSubmitRecords,\r\n        canEdit: isOwner || guests?.canEdit\r\n    };\r\n};","import CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { setDialogInfo, showDialog } from \"../../../../logic/state-management/dialogs\";\r\nimport { TARGET_DELETE_DIALOG_NAME, TARGET_EDIT_DIALOG_NAME } from \"../../../pages/top-level/all-targets-page\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport { usePermissions } from \"../../../../logic/state-management/permissions\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { navigateWithDelay } from \"../../../../logic/navigation/navigate-with-delay\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardSubheader: {\r\n        marginBottom: \"12px!important\"\r\n    },\r\n    infoCard: {\r\n        marginBottom: 16\r\n    }\r\n}));\r\n\r\nconst TargetCard = (props) => {\r\n    const classes = useStyles();\r\n    const id = props.id;\r\n    const info = props.targetInfo;\r\n    const users = props.targetUsers;\r\n\r\n    const {isOwner, canEdit} = usePermissions(users);\r\n\r\n    return (\r\n        <Card className={classes.infoCard}>\r\n            <CardActionArea onClick={() => navigateWithDelay(`/target/${id}/overview`)}>\r\n                <CardContent>\r\n                    <Typography variant=\"h5\">\r\n                        {info.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\">\r\n                        {info.description}\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\" component=\"div\">\r\n                        erstellt von&nbsp;\r\n                        <Chip\r\n                            avatar={<Avatar>{users.owner.id.substring(0, 1).toUpperCase()}</Avatar>}\r\n                            label={users.owner.name}\r\n                            // href={`/user/${users.owner.id}`}\r\n                        />\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            {/*<CardContent style={{paddingTop: 0}}>*/}\r\n            {/*    */}\r\n            {/*</CardContent>*/}\r\n\r\n            {canEdit && (\r\n                <CardActions>\r\n                    <Button size=\"small\" color=\"primary\" onClick={() => {\r\n                        setDialogInfo(TARGET_EDIT_DIALOG_NAME, {\r\n                            title: info.title,\r\n                            description: info.description,\r\n                            id: id\r\n                        });\r\n                        showDialog(TARGET_EDIT_DIALOG_NAME);\r\n                    }}>\r\n                        bearbeiten\r\n                    </Button>\r\n\r\n                    {isOwner && (\r\n                        <Button size=\"small\" color=\"primary\" onClick={() => {\r\n                            setDialogInfo(TARGET_DELETE_DIALOG_NAME, {title: info.title, id: id});\r\n                            showDialog(TARGET_DELETE_DIALOG_NAME);\r\n                        }}>\r\n                            löschen\r\n                        </Button>\r\n                    )}\r\n                </CardActions>\r\n            )}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TargetCard;","import { store } from \"../store/store\";\r\nimport { makeActionName } from \"../store/helpers\";\r\nimport produce from \"immer\";\r\n\r\nconst initialState = {};//getTestInitialState();//{};\r\nexport const apiv2StoreKey = \"apiv2\";\r\n\r\nexport const features = {\r\n    /**\r\n     * Keeps deep values, but gets rid of any shallow keys (first level) that are not delivered.\r\n     * It other words, it replaces the (list of) shallow keys, but keeps deep keys for all those shallow keys,\r\n     * which are included in the delivered information.\r\n     */\r\n    MERGE_REPLACE_SHALLOW: makeActionName(apiv2StoreKey, \"mergeTargets\"),\r\n    /** Keeps shallow and deep values and replaces those which have been (re-)delivered */\r\n    MERGE_REPLACE_DEEP_ONLY: makeActionName(apiv2StoreKey, \"mergeOnTarget\"),\r\n\r\n    /** Merges the guest users */\r\n    MERGE_INFO: makeActionName(apiv2StoreKey, \"mergeInfo\"),\r\n    MERGE_USERS: makeActionName(apiv2StoreKey, \"mergeUsers\"),\r\n    MERGE_QUOTES: makeActionName(apiv2StoreKey, \"mergeQuotes\"),\r\n    MERGE_STATS: makeActionName(apiv2StoreKey, \"mergeStats\"),\r\n\r\n    INCREASE_STATS: makeActionName(apiv2StoreKey, \"increateStats\"),\r\n    /** Caution! This can make the stat go below 0! */\r\n    DECREASE_STATS: makeActionName(apiv2StoreKey, \"decreaseStats\"),\r\n    FILTER_OUT_TARGET: makeActionName(apiv2StoreKey, \"filterOutTarget\"),\r\n    FILTER_OUT_USER: makeActionName(apiv2StoreKey, \"filterOutUser\"),\r\n    FILTER_OUT_QUOTE: makeActionName(apiv2StoreKey, \"filterOutQuote\"),\r\n};\r\n\r\nconst reducers = {\r\n    // DIRECTLY MODIFIING ACTIONS\r\n    [features.MERGE_REPLACE_SHALLOW]: (state, targets) => mergeReplaceShallow(state, targets),\r\n    [features.MERGE_REPLACE_DEEP_ONLY]: (state, targets) => produce(state, draft => {\r\n        for (let [key, value] of Object.entries(targets)) {\r\n            draft[key] = {...state[key], ...value};\r\n        }\r\n    }),\r\n\r\n    // DEEP MODIFIING ACTIONS // these require the keys to be existing already\r\n    [features.MERGE_INFO]: (state, {targetId, info}) => produce(state, draft => {\r\n        draft[targetId].info = {...draft[targetId]?.info, ...info};\r\n    }),\r\n    [features.MERGE_USERS]: (state, {targetId, user}) => produce(state, draft => {\r\n        let index = draft[targetId].users.guests.findIndex(item => item.id === user.id);\r\n        if (index >= 0) {\r\n            draft[targetId].users.guests[index] = {...draft[targetId].users.guests[index], ...user};\r\n        } else {\r\n            draft[targetId].users.guests.push(user);\r\n        }\r\n    }),\r\n    [features.MERGE_QUOTES]: (state, {targetId, quotes}) => produce(state, draft => {\r\n        if (!draft[targetId].quotes) {\r\n            draft[targetId].quotes = {};\r\n        }\r\n\r\n        for (let [id, value] of Object.entries(quotes)) {\r\n            draft[targetId].quotes[id] = {...draft[targetId].quotes[id], ...value};\r\n        }\r\n    }),\r\n    [features.MERGE_STATS]: (state, {targetId, stats}) => produce(state, draft => {\r\n        if (!draft[targetId].stats) {\r\n            draft[targetId].stats = {}\r\n        }\r\n        for (let [timeframe, newState] of Object.entries(stats)) {\r\n            draft[targetId].stats[timeframe] = {...draft[targetId].stats[timeframe], ...newState}\r\n        }\r\n    }),\r\n\r\n    // SPECIAL ACTIONS\r\n    [features.INCREASE_STATS]: (state, {targetId, quoteId}) => produce(state, draft => {\r\n        for (let [timeframe] of Object.entries(draft[targetId].stats)) {\r\n            draft[targetId].stats[timeframe][quoteId] += 1;\r\n        }\r\n    }),\r\n    [features.DECREASE_STATS]: (state, {targetId, quoteId}) => produce(state, draft => {\r\n        if (findLowestStat(draft[targetId].stats, quoteId) !== 0) {\r\n            for (let [timeframe] of Object.entries(draft[targetId].stats)) {\r\n                draft[targetId].stats[timeframe][quoteId] -= 1;\r\n            }\r\n        }\r\n    }),\r\n\r\n    [features.FILTER_OUT_TARGET]: (state, targetId) => produce(state, draft => {\r\n        delete draft[targetId];\r\n    }),\r\n    [features.FILTER_OUT_USER]: (state, {targetId, userId}) => produce(state, draft => {\r\n        let index = draft[targetId].users.guests.findIndex(item => item.id === userId);\r\n        if (index >= 0)\r\n            draft[targetId].users.guests.splice(index, 1);\r\n    }),\r\n    [features.FILTER_OUT_QUOTE]: (state, {targetId, quoteId}) => produce(state, draft => {\r\n        // draft[targetId].quotes = Object.keys(draft[targetId].quotes).filter(key => key !== quoteId).reduce((obj, key) => {\r\n        //     obj[key] = draft[targetId].quotes[key];\r\n        //     return obj;\r\n        // }, {});\r\n        delete draft[targetId].quotes[quoteId];\r\n\r\n        if (draft[targetId].stats) {\r\n            for (let [timeframe] of Object.entries(draft[targetId].stats)) {\r\n                delete draft[targetId].stats[timeframe][quoteId];\r\n            }\r\n        }\r\n    })\r\n};\r\n\r\nconst mergeReplaceShallow = (state, targets) => {\r\n    const merge = {};\r\n    for (let [key, value] of Object.entries(targets)) {\r\n        merge[key] = {...state[key], ...value};\r\n    }\r\n    return merge;\r\n};\r\n\r\nconst findLowestStat = (stats, quoteId) => {\r\n    let lowest = Number.MAX_SAFE_INTEGER;\r\n    for (let [timeframe] of Object.entries(stats)) {\r\n        if (stats[timeframe][quoteId] < lowest) {\r\n            lowest = stats[timeframe][quoteId];\r\n        }\r\n    }\r\n    return lowest;\r\n}\r\n\r\nstore.injectReducer(apiv2StoreKey, (state = initialState, {type, payload}) =>\r\n    reducers[type] ? reducers[type](state, payload) : state\r\n);\r\n\r\n// export const newCoreTest = () => {\r\n//     const myState = {\r\n//         \"Nummer1\": {\r\n//             \"title\": \"Das erste.\",\r\n//             \"quotes\": {\r\n//                 \"1\": {\r\n//                     \"text\": \"Hallo\"\r\n//                 }\r\n//             }\r\n//         },\r\n//         \"Nummer3\": {\r\n//             \"title\": \"das dritte\"\r\n//         }\r\n//     };\r\n//\r\n//     const loaded = {\r\n//         \"Nummer1\": {\r\n//             \"quotes\": {\r\n//                 \"2\": {\r\n//                     \"text\": \"HALLO HIER\"\r\n//                 }\r\n//             }\r\n//         },\r\n//         \"Nummer2\": {\r\n//             \"title\": \"Irgendwas\"\r\n//         }\r\n//     };\r\n//\r\n//     const merge = produce(myState, draft => {\r\n//         for (let [key, value] of Object.entries(loaded)) {\r\n//             draft[key] = { ...myState[key], ...value };\r\n//         }\r\n//     })\r\n//     console.log(\"merge\");\r\n//     console.log(merge);\r\n//\r\n//     const merge2 = {};\r\n//     for (let [key, value] of Object.entries(loaded)) {\r\n//         merge2[key] = { ...myState[key], ...value };\r\n//     }\r\n//\r\n//     console.log(\"merge2\");\r\n//     console.log(merge2);\r\n// };\r\n","import { store } from \"../store/store\";\r\nimport { features } from \"./core\";\r\nimport moment from \"moment\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { endpoints, makeRequest } from \"./polling\";\r\n\r\n// ---------------------------------- //\r\n// DIRECTLY MODIFIING ACTIONS         //\r\n// ---------------------------------- //\r\n\r\n// PRIMARILY USED BY RESULTS OF API-CALLS\r\n\r\n/**\r\n * Updates the targets list, as specified by the action MERGE_REPLACE_SHALLOW. This means it keeps internal attributes\r\n * of the existing targets (and overrides them if new attributes are provided), but will only keep the targets that are\r\n * also specified in the argument targets.\r\n * Use when replacing the full list of targets.\r\n */\r\nexport const updateTargetsList = (targets) => {\r\n    store.dispatch({type: features.MERGE_REPLACE_SHALLOW, payload: targets});\r\n};\r\n\r\n/**\r\n * Updates all targets internally, keeping all existing attributes and targets, even if they are not in the provided\r\n * argument targets.\r\n * Use when only replacing information in a single target or adding a single target.\r\n */\r\nexport const updateTargetsInternally = (targets) => {\r\n    store.dispatch({type: features.MERGE_REPLACE_DEEP_ONLY, payload: targets});\r\n};\r\n\r\n// ---------------------------------- //\r\n// IMPLIED MODIFIING ACTIONS          //\r\n// ---------------------------------- //\r\n\r\n// CREATE/POST\r\n\r\nexport const createTarget = ({title, description}) => {\r\n    const current = moment().format();\r\n    const uuid = uuidv4();\r\n    updateTargetsInternally({\r\n        [uuid]: {\r\n            info: {\r\n                owner: \"Laden...\",\r\n                title: title,\r\n                description: description,\r\n                createdOn: current,\r\n                lastVisited: current\r\n            },\r\n            // users: {\r\n            //     owner: {\r\n            //         id: \"Laden...\",\r\n            //         name: \"Laden...\",\r\n            //     },\r\n            //     guests: []\r\n            // }\r\n        }\r\n    });\r\n\r\n    makeRequest(endpoints.POST.TARGET, {\r\n        body: {\r\n            \"title\": title,\r\n            \"description\": description\r\n        }\r\n    });\r\n};\r\n\r\nexport const createQuote = (targetId, text) => {\r\n    const current = moment();\r\n    const millis = current.valueOf();\r\n\r\n    store.dispatch({\r\n        type: features.MERGE_QUOTES, payload: {\r\n            targetId,\r\n            quotes: {\r\n                [millis]: {\r\n                    \"text\": text,\r\n                    \"createdOn\": current.format()\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    // store.dispatch({\r\n    //     type: features.MERGE_STATS, payload: {\r\n    //         targetId,\r\n    //         stats: {\r\n    //             \"today\": {\r\n    //                 [millis]: 0\r\n    //             },\r\n    //             \"full\": {\r\n    //                 [millis]: 0\r\n    //             }\r\n    //         }\r\n    //     }\r\n    // });\r\n\r\n    makeRequest(endpoints.POST.TARGET_id_QUOTE, {\r\n        targetId: targetId,\r\n        body: {\r\n            \"text\": text\r\n        }\r\n    });\r\n};\r\n\r\nexport const createRecord = (targetId, quoteId) => {\r\n    store.dispatch({\r\n        type: features.INCREASE_STATS, payload: {\r\n            targetId,\r\n            quoteId\r\n        }\r\n    });\r\n\r\n    makeRequest(endpoints.POST.TARGET_id_QUOTE_id, {\r\n        targetId: targetId,\r\n        quoteId: quoteId\r\n    });\r\n};\r\n\r\n// export const addUserLocally = (targetId, {userId, email, canSubmitRecords, canEdit}) => {\r\n//     store.dispatch({\r\n//         type: features.MERGE_USERS, payload: {\r\n//             targetId: targetId,\r\n//             user: {\r\n//                 id: userId,\r\n//                 name: email,\r\n//                 canSubmitRecords: canSubmitRecords,\r\n//                 canEdit: canEdit\r\n//             }\r\n//         }\r\n//     });\r\n// };\r\n\r\n/**\r\n * @param {string} targetId\r\n * @param {{email: string, canSubmitRecords: boolean, canEdit: boolean}} user\r\n * @param {function(string)} callback\r\n */\r\nexport const tryAddUser = (targetId, user, callback) => {\r\n    makeRequest(endpoints.POST.TARGET_id_USER, {\r\n        targetId: targetId,\r\n        body: {\r\n            ...user\r\n        }\r\n    }, callback);\r\n};\r\n\r\n// UPDATE/PATCH\r\n\r\nexport const updateTarget = (targetId, {title, description}) => {\r\n    store.dispatch({\r\n        type: features.MERGE_INFO, payload: {\r\n            targetId: targetId,\r\n            info: {\r\n                title: title,\r\n                description: description\r\n            }\r\n        }\r\n    });\r\n\r\n    makeRequest(endpoints.PATCH.TARGET_id, {\r\n        targetId: targetId,\r\n        body: {\r\n            \"title\": title,\r\n            \"description\": description\r\n        }\r\n    });\r\n};\r\n\r\nexport const updateQuote = (targetId, quoteId, text) => {\r\n    store.dispatch({\r\n        type: features.MERGE_QUOTES, payload: {\r\n            targetId,\r\n            quotes: {\r\n                [quoteId]: {\r\n                    \"text\": text\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    makeRequest(endpoints.PATCH.TARGET_id_QUOTE_id, {\r\n        targetId: targetId,\r\n        quoteId: quoteId,\r\n        body: {\r\n            \"text\": text\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * @param {string} targetId\r\n * @param {{id: string, canSubmitRecords: boolean, canEdit: boolean}} user\r\n */\r\nexport const updateUser = (targetId, user) => {\r\n    store.dispatch({\r\n        type: features.MERGE_USERS, payload: {\r\n            targetId: targetId,\r\n            user: user\r\n        }\r\n    });\r\n\r\n    makeRequest(endpoints.PATCH.TARGET_id_USER_id, {\r\n        targetId: targetId,\r\n        userId: user.id,\r\n        body: {\r\n            canSubmitRecords: user.canSubmitRecords,\r\n            canEdit: user.canEdit\r\n        }\r\n    })\r\n};\r\n\r\n// DELETE\r\n\r\nexport const deleteTarget = (targetId) => {\r\n    store.dispatch({\r\n        type: features.FILTER_OUT_TARGET, payload: targetId\r\n    });\r\n\r\n    makeRequest(endpoints.DELETE.TARGET_id, {\r\n        targetId: targetId\r\n    });\r\n};\r\n\r\nexport const deleteQuote = (targetId, quoteId) => {\r\n    store.dispatch({\r\n        type: features.FILTER_OUT_QUOTE, payload: {\r\n            targetId,\r\n            quoteId\r\n        }\r\n    });\r\n\r\n    makeRequest(endpoints.DELETE.TARGET_id_QUOTE_id, {\r\n        targetId: targetId,\r\n        quoteId: quoteId\r\n    });\r\n};\r\n\r\nexport const deleteLatestRecord = (targetId, quoteId) => {\r\n    store.dispatch({\r\n        type: features.DECREASE_STATS, payload: {\r\n            targetId,\r\n            quoteId\r\n        }\r\n    });\r\n\r\n    makeRequest(endpoints.DELETE.TARGET_id_QUOTE_id_RECORD, {\r\n        targetId: targetId,\r\n        quoteId: quoteId\r\n    });\r\n}\r\n\r\nexport const removeUser = (targetId, userId) => {\r\n    store.dispatch({\r\n        type: features.FILTER_OUT_USER, payload: {\r\n            targetId: targetId,\r\n            userId: userId\r\n        }\r\n    });\r\n\r\n    makeRequest(endpoints.DELETE.TARGET_id_USER_id, {\r\n        targetId: targetId,\r\n        userId: userId\r\n    })\r\n}","import { getState, makeActionName, subscribe } from \"./store/helpers\";\r\nimport { useLayoutEffect, useState } from \"react\";\r\nimport { store } from \"./store/store\";\r\n\r\nconst storeKey = \"errorMessage\";\r\n\r\nconst SET = makeActionName(storeKey, \"set\");\r\nconst CLEAR = makeActionName(storeKey, \"clear\");\r\n\r\nconst DEFAULT_SCOPE = \"global\";\r\n\r\n// DEFINITIONS\r\nconst reducers = {\r\n    [SET]: (state, {message, scope}) => {\r\n        const newState = Object.assign({}, state);\r\n        newState[scope] = message;\r\n        return newState;\r\n    },\r\n    [CLEAR]: (state, {scope}) => {\r\n        const newState = Object.assign({}, state);\r\n        newState[scope] = null;\r\n        return newState;\r\n    }\r\n};\r\n\r\nconst initialState = {\r\n    global: null\r\n}\r\n\r\n// EXPORTS -- setters\r\nexport const setErrorMessage = (message, scope = DEFAULT_SCOPE) =>\r\n    store.dispatch({\r\n        type: SET,\r\n        payload: {message: message, scope: scope}\r\n    });\r\nexport const clearErrorMessage = (scope = DEFAULT_SCOPE) =>\r\n    store.dispatch({\r\n        type: CLEAR,\r\n        payload: {scope: scope}\r\n    });\r\n\r\nstore.injectReducer(storeKey, (state = initialState, {type, payload}) =>\r\n    reducers[type] ? reducers[type](state, payload) : state\r\n);\r\n\r\n// -- hooks\r\n/**\r\n * Subscribes to the error message for the given scope.\r\n * @param scope \"global\" by default\r\n * @returns {*|string}\r\n */\r\nexport const useErrorMessage = (scope = DEFAULT_SCOPE) => {\r\n    // for how this exactly works, look in useTargets() in \"./redux/targets\"\r\n    const [state, setState] = useState(getState(storeKey));\r\n    useLayoutEffect(() => subscribe(storeKey, setState), [setState]);\r\n    return state[scope];\r\n};\r\n\r\n// -- helpers\r\nexport const defaultFailureCallback = (error) => {\r\n    setErrorMessage(JSON.stringify(error.message));\r\n}","export const errorLookup = {\r\n    \"MalformedUUID\": \"Die Target-ID ist ungültig\",\r\n    \"MalformedInt\": \"Ein Anfrage-Parameter ist ungültig\",\r\n    \"MalformedTime\": \"Der Zeitpunkt wurde nicht korrekt übermittelt\",\r\n    \"TargetNotFound\": \"Das Target konnte nicht gefunden werden\",\r\n    \"TargetTitleTooLong\": \"Der Titel des Targets ist zu lang\",\r\n    \"TargetDescriptionTooLong\": \"Die Beschreibung des Targets ist zu lang\",\r\n    \"QuoteNotFound\": \"Der Spruch konnte nicht gefunden werden\",\r\n    \"QuoteTextTooLong\": \"Der Spruch ist zu lang\",\r\n    \"QuoteNotPartOfTarget\": \"Der Spruch gehört nicht zu dem Target\",\r\n    \"NoRecordsCreated\": \"Es gibt noch keine Records, die gelöscht werden könnten\",\r\n    \"RecordTooOld\": \"Der letzte Record ist zu alt, um ihn noch zu löschen\",\r\n    \"UserCannotViewTarget\": \"Du darfst dieses Target nicht ansehen\",\r\n    \"UserCannotSubmitRecords\": \"Du darfst keine Records bei diesem Target eintragen\",\r\n    \"UserCannotEditTarget\": \"Du darfst dieses Target nicht bearbeiten\",\r\n    \"UserIsNotOwner\": \"Das Target kann nur vom Inhaber gelöscht werden\",\r\n    \"GuestUserNotFound\": \"Diese Person war nie Teil des Targets\",\r\n    \"UserNotFound\": \"Die Person konnte nicht gefunden werden (Email falsch?)\",\r\n    \"MissingBody\": \"Anfrage ungültig (MissingBody)\",\r\n    \"TooManyBlankFields\": \"Es dürfen keine Felder leergelassen werden (TooManyBlankFields)\",\r\n    \"CannotDeleteSelfFromTarget\": \"Du kannst dich nicht selbst von diesem Target löschen\",\r\n    \"CannotDeleteTargetOwner\": \"Der Inhaber des Targets kann nicht gelöscht werden\",\r\n    \"CannotAddOwnerAsGuest\": \"Der Inhaber des Targets kann nicht als Person hinzugefügt werden\",\r\n    \"APIAccessDenied\": \"Interner API-Zugriffsfehler. Bitte Admin benachrichten\",\r\n    \"InternalError\": \"Interner Server-Fehler. Bitte Admin benachrichtigen\",\r\n};","import { hideLoading, showLoading } from \"react-redux-loading-bar\";\r\nimport { store } from \"./store/store\";\r\n\r\nexport const showLoadingBar = () => store.dispatch(showLoading());\r\nexport const hideLoadingBar = () => store.dispatch(hideLoading());\r\n","import { updateTargetsInternally, updateTargetsList } from \"./actions\";\r\nimport { setImmediateInterval } from \"../store/helpers\";\r\nimport { store } from \"../store/store\";\r\nimport axios from \"axios\";\r\nimport { getTokenOnce } from \"../authentication\";\r\nimport { setErrorMessage } from \"../error-message\";\r\nimport { errorLookup } from \"./error-lookup\";\r\nimport { hideLoadingBar, showLoadingBar } from \"../loading-helper\";\r\nimport { getStateOnce } from \"./hooks\";\r\n\r\n// axios.defaults.proxy.host = \"http://localhost\";\r\n// axios.defaults.proxy.post = 8080;\r\naxios.defaults.baseURL = process.env.NODE_ENV === \"development\" ? \"http://localhost:8080/api/v2\" : \"https://quotracker.herokuapp.com/api/v2\";\r\naxios.defaults.timeout = 18000;\r\n\r\nconst DISABLE_SERVER_ACCESS = false;\r\n\r\n/**\r\n * @typedef Endpoint\r\n * @type {object}\r\n * @property {function({string}): string} url\r\n * @property {function(object, ?string)} handler\r\n * @property {?function({string}): boolean} shouldShowLoading\r\n */\r\n\r\nexport const endpoints = {\r\n    GET: {\r\n        /** @type Endpoint */\r\n        TARGETS: {\r\n            url: () => \"/targets\",\r\n            handler: (result) => {\r\n                updateTargetsList(result);\r\n                let eps = [];\r\n                let properties = [];\r\n                for (let [key] of Object.entries(result)) {\r\n                    eps.push(endpoints.GET.TARGET_id_USERS);\r\n                    properties.push({targetId: key});\r\n                }\r\n                oneTimePoll(eps, properties);\r\n            },\r\n            shouldShowLoading: (props) => Object.entries(getStateOnce()) <= 1\r\n        },\r\n        /** @type Endpoint */\r\n        TARGET_id_INFO: {\r\n            url: (props) => `/target/${props.targetId}/info`,\r\n            handler: (result) => {\r\n                updateTargetsInternally(result);\r\n            },\r\n            shouldShowLoading: (props) => !getStateOnce()[props.targetId]?.info\r\n        },\r\n        /** @type Endpoint */\r\n        TARGET_id_USERS: {\r\n            url: (props) => `/target/${props.targetId}/users`,\r\n            handler: (result) => {\r\n                updateTargetsInternally(result);\r\n            },\r\n            shouldShowLoading: (props) => !getStateOnce()[props.targetId]?.users\r\n        },\r\n        /** @type Endpoint */\r\n        TARGET_id_QUOTES: {\r\n            url: (props) => `/target/${props.targetId}/quotes`,\r\n            handler: (result) => {\r\n                updateTargetsInternally(result);\r\n            },\r\n            shouldShowLoading: (props) => !getStateOnce()[props.targetId]?.quotes\r\n        },\r\n        /** @type Endpoint */\r\n        TARGET_id_STATS: {\r\n            url: (props) => `/target/${props.targetId}/stats`,\r\n            handler: (result) => {\r\n                updateTargetsInternally(result);\r\n            },\r\n            shouldShowLoading: (props) => !getStateOnce()[props.targetId]?.stats\r\n        },\r\n        /** @type Endpoint */\r\n        TARGET_id_RECORDS: {\r\n            url: (props) => `/target/${props.targetId}/records`,\r\n            handler: (result) => {\r\n                updateTargetsInternally(result);\r\n            },\r\n            shouldShowLoading: (props) => !getStateOnce()[props.targetId]?.records\r\n        },\r\n        /** @type Endpoint */\r\n        TARGET_id_RECORDS_from_to: {\r\n            url: (props) => `/target/${props.targetId}/records?from=${props.from}&to=${props.to}`,\r\n            handler: (result) => {\r\n                updateTargetsInternally(result);\r\n            },\r\n            shouldShowLoading: (props) => !getStateOnce()[props.targetId]?.records\r\n        }\r\n    },\r\n\r\n    PATCH: {\r\n        /** @type Endpoint */\r\n        TARGET_id: {\r\n            method: \"patch\",\r\n            url: (props) => `/target/${props.targetId}`,\r\n            handler: (result) => endpoints.GET.TARGET_id_INFO.handler(result)\r\n        },\r\n        /** @type Endpoint */\r\n        TARGET_id_QUOTE_id: {\r\n            method: \"patch\",\r\n            url: (props) => `/target/${props.targetId}/quote/${props.quoteId}`,\r\n            handler: (result) => endpoints.GET.TARGET_id_QUOTES.handler(result)\r\n        },\r\n        /** @type Endpoint */\r\n        TARGET_id_USER_id: {\r\n            method: \"patch\",\r\n            url: (props) => `/target/${props.targetId}/user/${props.userId}`,\r\n            handler: (result) => endpoints.GET.TARGET_id_USERS.handler(result)\r\n        }\r\n    },\r\n\r\n    POST: {\r\n        /** @type Endpoint */\r\n        TARGET: {\r\n            method: \"post\",\r\n            url: () => `/target`,\r\n            handler: (result, id) => {\r\n                endpoints.GET.TARGET_id_INFO.handler(result);\r\n                oneTimePoll([\r\n                    endpoints.GET.TARGET_id_USERS\r\n                ], {\r\n                    targetId: id\r\n                });\r\n            },\r\n            shouldShowLoading: () => true\r\n        },\r\n        /** @type Endpoint */\r\n        TARGET_id_QUOTE: {\r\n            method: \"post\",\r\n            url: (props) => `/target/${props.targetId}/quote`,\r\n            handler: (result) => endpoints.GET.TARGET_id_QUOTES.handler(result)\r\n        },\r\n        /** @type Endpoint */\r\n        TARGET_id_QUOTE_id: {\r\n            method: \"post\",\r\n            url: (props) => `/target/${props.targetId}/quote/${props.quoteId}`,\r\n            handler: (result) => endpoints.GET.TARGET_id_STATS.handler(result)\r\n        },\r\n        /** @type Endpoint */\r\n        TARGET_id_USER: {\r\n            method: \"post\",\r\n            url: (props) => `/target/${props.targetId}/user`,\r\n            handler: (result) => endpoints.GET.TARGET_id_USERS.handler(result)\r\n        }\r\n    },\r\n\r\n    DELETE: {\r\n        /** @type Endpoint */\r\n        TARGET_id: {\r\n            method: \"delete\",\r\n            url: (props) => `/target/${props.targetId}`,\r\n            handler: (result) => {\r\n                updateTargetsList(result);\r\n            },\r\n            shouldShowLoading: () => true\r\n        },\r\n        /** @type Endpoint */\r\n        TARGET_id_QUOTE_id: {\r\n            method: \"delete\",\r\n            url: (props) => `/target/${props.targetId}/quote/${props.quoteId}`,\r\n            handler: (result) => endpoints.GET.TARGET_id_QUOTES.handler(result)\r\n        },\r\n        /** @type Endpoint */\r\n        TARGET_id_QUOTE_id_RECORD: {\r\n            method: \"delete\",\r\n            url: (props) => `/target/${props.targetId}/quote/${props.quoteId}/record`,\r\n            handler: (result) => endpoints.GET.TARGET_id_STATS.handler(result)\r\n        },\r\n        /** @type Endpoint */\r\n        TARGET_id_USER_id: {\r\n            method: \"delete\",\r\n            url: (props) => `/target/${props.targetId}/user/${props.userId}`,\r\n            handler: (result) => endpoints.GET.TARGET_id_USERS.handler(result)\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Subscribe to make poll requests in regular intervals. Use with useEffect()-hook.\r\n * Returns function to unsubscribe.\r\n * @param {[Endpoint]} endpoints a list of endpoints to poll\r\n * @param {{interval: {number}}|[{interval: {number}}]} properties one properties-object for all requests or seperate\r\n *                                                      ones for each request. interval should be provided in seconds.\r\n *                                                      if array, only the first interval will be taken into account.\r\n * @returns {function(...[*]=)} unsubscribe function\r\n */\r\nexport const poll = (endpoints, properties) => {\r\n    let interval = Array.isArray(properties) ? properties[0].interval : properties?.interval;\r\n\r\n    if (!interval || interval < 5) {\r\n        interval = 100;\r\n    }\r\n\r\n    const id = setImmediateInterval(() => {\r\n        oneTimePoll(endpoints, properties);\r\n    }, interval * 1000);\r\n\r\n    log(`poll subscribe (${id}) using interval ${interval}`);\r\n\r\n    // return unsubscribe function\r\n    return () => {\r\n        log(`poll unsubscribe (${id})`);\r\n        clearInterval(id);\r\n    };\r\n};\r\n\r\n/**\r\n * Makes a single poll request using redux-thunk.\r\n * @param {[Endpoint]} endpoints a list of endpoints to poll\r\n * @param {{}|[]} properties one properties-object for all requests or seperate ones for each request.\r\n */\r\nexport const oneTimePoll = (endpoints, properties) => {\r\n    if (DISABLE_SERVER_ACCESS) return;\r\n\r\n    store.dispatch(async (dispatch) => {\r\n        const isPropertiesAnArray = Array.isArray(properties);\r\n\r\n        let displayLoadingBar = false;\r\n        endpoints.forEach((endpoint, index) => {\r\n            displayLoadingBar = displayLoadingBar ||\r\n                (endpoint.shouldShowLoading\r\n                    && endpoint.shouldShowLoading(isPropertiesAnArray ? properties[index] : properties))\r\n        });\r\n\r\n        if (displayLoadingBar) showLoadingBar();\r\n\r\n        const token = await getTokenOnce();\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n\r\n        const requests = isPropertiesAnArray\r\n            ? endpoints.map((ep, index) => axios.get(ep.url(properties[index]), config))\r\n            : endpoints.map((ep) => axios.get(ep.url(properties), config));\r\n\r\n        axios.all(requests)\r\n        .then(axios.spread((...responses) => {\r\n            responses.forEach((response, index) => {\r\n                endpoints[index].handler(response.data.data)\r\n\r\n                // console.log(endpoints[index]);\r\n                // console.log(response.statusText);\r\n                // console.log(response.headers);\r\n                // console.log(response.config);\r\n                // console.log(response.data);\r\n                log(response.status);\r\n            });\r\n            hideLoadingBar();\r\n        }))\r\n        .catch(error => {\r\n            handleError(error);\r\n            hideLoadingBar();\r\n            // if (error.response?.data?.status) {\r\n            //     let textError = errorLookup[error.response.data.status];\r\n            //     setErrorMessage( textError ? textError : `Unbekannter Fehler: ${error.response.data.status}`);\r\n            // } else {\r\n            //     setErrorMessage(\"Es ist ein unbekannter Fehler aufgetreten\");\r\n            // }\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Sends a request to the server and awaits its answer, which will be merged into the targets\r\n * @param {Endpoint} endpoint either a patch, post or delete endpoint from endpoints\r\n * @param {{}} properties properties for the request, e.g. the targetId, request-body\r\n * @param {function(string)} callback\r\n */\r\nexport const makeRequest = (endpoint, properties, callback = null) => {\r\n    if (DISABLE_SERVER_ACCESS) return;\r\n\r\n    store.dispatch(async (dispatch) => {\r\n        if (endpoint.shouldShowLoading && endpoint.shouldShowLoading(properties))\r\n            showLoadingBar();\r\n\r\n        const token = await getTokenOnce();\r\n\r\n        log(endpoint.method);\r\n        log(endpoint.url(properties));\r\n        log(properties.body);\r\n\r\n        axios({\r\n            method: endpoint.method,\r\n            url: endpoint.url(properties),\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            data: {\r\n                ...properties.body\r\n            },\r\n        })\r\n        .then((response) => {\r\n            if (endpoint.method === \"post\") {\r\n                endpoint.handler(response.data.data, response.data.id);\r\n            } else {\r\n                endpoint.handler(response.data.data);\r\n            }\r\n\r\n            if (callback) callback(response.data.status);\r\n\r\n            log(response.status);\r\n            log(response.data);\r\n            hideLoadingBar();\r\n        })\r\n        .catch((error) => {\r\n            if (callback) callback(error.response?.data?.status);\r\n            handleError(error);\r\n            hideLoadingBar();\r\n        });\r\n    });\r\n};\r\n\r\nconst handleError = (error) => {\r\n    log(\"ERROR\"); // @TODO remove this bit\r\n    log(error);\r\n    log(JSON.stringify(error.response));\r\n\r\n    if (error.response?.data?.status) {\r\n        let textError = errorLookup[error.response.data.status];\r\n        setErrorMessage( textError ? textError : `Unbekannter Fehler: ${error.response.data.status}`);\r\n    } else {\r\n        setErrorMessage(\"Es ist ein unbekannter Fehler aufgetreten\");\r\n    }\r\n};\r\n\r\nconst isDevelopment = process.env.NODE_ENV === \"development\";\r\nconst log = (message) => {\r\n    if (isDevelopment && false) {\r\n        console.log(message);\r\n    }\r\n};","import { getState, subscribe } from \"../store/helpers\";\r\nimport { apiv2StoreKey } from \"./core\";\r\nimport { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { endpoints, poll } from \"./polling\";\r\n\r\nconst useGeneral = (func) => {\r\n    const [state, setState] = useState(getState(apiv2StoreKey));\r\n    useLayoutEffect(() => subscribe(apiv2StoreKey, setState), [setState]);\r\n    return func(state);\r\n};\r\n\r\nexport const getStateOnce = () => {\r\n    return getState(apiv2StoreKey);\r\n}\r\n\r\n/**\r\n * Intended for all-targets-page. Provides a list of targets.\r\n *\r\n * Uses\r\n * GET /targets         (sync every 30s)\r\n * GET /target/{}/users (sync when update)\r\n */\r\nexport const useTargets = () => {\r\n    useEffect(() => poll([\r\n        endpoints.GET.TARGETS\r\n    ], {\r\n        interval: 30\r\n    }), [])\r\n    return useGeneral((state) => state);\r\n};\r\n\r\n/**\r\n * Intended for overview-page. Provides all information for a single target.\r\n *\r\n * Uses\r\n * GET /target/{}/info   (sync every 30s)\r\n * GET /target/{}/users  (sync every 30s)\r\n * GET /target/{}/quotes (sync every 30s)\r\n * GET /target/{}/stats  (sync every 30s)\r\n * @param {string} targetId the id of the target to retrieve information for.\r\n */\r\nexport const useOverview = (targetId) => {\r\n    useEffect(() =>\r\n        poll([\r\n            endpoints.GET.TARGET_id_INFO,\r\n            endpoints.GET.TARGET_id_USERS,\r\n            endpoints.GET.TARGET_id_QUOTES,\r\n            endpoints.GET.TARGET_id_STATS\r\n        ], {\r\n            interval: 30,\r\n            targetId: targetId\r\n        }), [targetId]);\r\n    return useGeneral((state) => state[targetId]);\r\n};\r\n\r\n/**\r\n * Intended for insert-page. Provides quotes and stats for a single target\r\n * (only for the current day for now).\r\n *\r\n * Uses\r\n * GET /target/{}/quotes (sync every 30s)\r\n * GET /target/{}/stats  (sync every 10s)\r\n * @param {string} targetId the id of the target to retrieve information for.\r\n */\r\nexport const useStats = (targetId) => {\r\n    useEffect(() => {\r\n        const quotesUnsub = poll([endpoints.GET.TARGET_id_QUOTES], {interval: 30, targetId: targetId});\r\n        const statsUnsub = poll([endpoints.GET.TARGET_id_STATS], {interval: 10, targetId: targetId});\r\n        return () => {\r\n            quotesUnsub();\r\n            statsUnsub();\r\n        };\r\n    }, [targetId]);\r\n\r\n    // @TODO possibly implement some kind of caching here\r\n    const fromStore = useGeneral((state) => state[targetId])\r\n    let quotesWithStats = {};\r\n    if (fromStore?.stats && fromStore?.quotes) {\r\n        // @TODO make this use all possible stats (today, full, ...)\r\n        for (let [key, value] of Object.entries(fromStore.stats.today)) {\r\n            quotesWithStats[key] = {\r\n                text: fromStore.quotes[key].text,\r\n                count: value\r\n            };\r\n        }\r\n    }\r\n    return {today: quotesWithStats};\r\n};\r\n\r\n/**\r\n * Intended for all situations, where just the users are required (i.e. for permissions).\r\n *\r\n * Uses\r\n * GET /target/{}/users (sync every 30s)\r\n * @param {string} targetId the id of the target to retrieve information for.\r\n */\r\nexport const useUsers = (targetId) => {\r\n    useEffect(() => poll([\r\n        endpoints.GET.TARGET_id_USERS\r\n    ], {\r\n        interval: 30,\r\n        targetId: targetId\r\n    }), [targetId]);\r\n    return useGeneral((state) => state[targetId]?.users);\r\n};\r\n// @param {{owner: {}, guests: []}} targetId\r\n\r\n/**\r\n * Intended for quotes-page. Provides the list of quotes for a single target.\r\n *\r\n * Uses\r\n * GET /target/{}/quotes (sync every 15s)\r\n * @param {string} targetId the id of the target to retrieve information for.\r\n * @param {number|undefined} interval\r\n */\r\nexport const useQuotes = (targetId, interval = 15) => {\r\n    useEffect(() => poll([\r\n        endpoints.GET.TARGET_id_QUOTES\r\n    ], {\r\n        interval: interval,\r\n        targetId: targetId\r\n    }), [interval, targetId]);\r\n    return useGeneral((state) => state[targetId]?.quotes);\r\n};\r\n\r\n/**\r\n * Intended for stats-page. Provides the full list of records from all quotes of a single target.\r\n *\r\n * Uses\r\n * GET /target/{}/records (sync every 10s)\r\n * @param {string} targetId the id of the target to retrieve information for.\r\n */\r\nexport const useRecords = (targetId) => {\r\n    useEffect(() => poll([\r\n        endpoints.GET.TARGET_id_RECORDS\r\n    ], {\r\n        interval: 10,\r\n        targetId: targetId\r\n    }), [targetId]);\r\n    return useGeneral((state) => state[targetId]?.records);\r\n};","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n/**\r\n * Standard confirmation dialog (e.g. for when deleting something)\r\n * @param props\r\n * @returns {*}\r\n */\r\nconst ConfirmDialog = (props) => {\r\n    return (\r\n        <Dialog open={props.open}\r\n                onClose={props.negativeAction}>\r\n            <DialogTitle>{props.title}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>{props.text}</DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={props.negativeAction} color=\"primary\">{props.negativeText}</Button>\r\n                <Button onClick={props.positiveAction} color=\"primary\">{props.positiveText}</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default ConfirmDialog;","import React, { useLayoutEffect, useState } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\n/**\r\n * @param dialogState {null|{}}\r\n * @param maxTitleLength {number}\r\n * @param maxDescriptionLength {number}\r\n * @returns {{checkSave: (function(): boolean), clearData: (function()), description: string, title: string, element: *}}\r\n */\r\nexport const useEditTargetForm = (dialogState, maxTitleLength, maxDescriptionLength) => {\r\n    const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n    const [enteredDescription, setEnteredDescription] = useState(\"\");\r\n\r\n    const [errorTitle, setErrorTitle] = useState(false);\r\n    const [errorDescription, setErrorDescription] = useState(false);\r\n\r\n    // @TODO simplify helper: use an expression, i.e. helperText={errorTitle ? \"...Text...\" : \"\"}\r\n    const [helperTextTitle, setHelperTextTitle] = useState(\"\");\r\n    const [helperTextDescription, setHelperTextDescription] = useState(\"\");\r\n\r\n    const handleTitleChange = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n        setErrorTitle(event.target.value.length > maxTitleLength);\r\n\r\n        if (event.target.value.length > maxTitleLength) setHelperTextTitle(`Titel darf nicht länger als ${maxTitleLength} Zeichen sein`);\r\n        else setHelperTextTitle(\"\");\r\n    };\r\n\r\n    const handleDescriptionChange = (event) => {\r\n        setEnteredDescription(event.target.value);\r\n        setErrorDescription(event.target.value.length > maxDescriptionLength);\r\n\r\n        if (event.target.value.length > maxDescriptionLength) setHelperTextDescription(`Beschreibung darf nicht länger als ${maxDescriptionLength} Zeichen sein`)\r\n        else setHelperTextDescription(\"\");\r\n    };\r\n\r\n    const onSave = () => {\r\n        if (enteredTitle.length === 0) {\r\n            setErrorTitle(true);\r\n            setHelperTextTitle(\"Titel darf nicht leer sein\")\r\n        }\r\n        if (enteredDescription.length === 0) {\r\n            setErrorDescription(true);\r\n            setHelperTextDescription(\"Beschreibung darf nicht leer sein\")\r\n        }\r\n\r\n        return (enteredTitle.length > 0 && enteredTitle.length <= maxTitleLength\r\n            && enteredDescription.length > 0 && enteredDescription.length <= maxDescriptionLength);\r\n    };\r\n\r\n    const clearData = () => {\r\n        setEnteredTitle(\"\");\r\n        setEnteredDescription(\"\");\r\n        setHelperTextTitle(\"\");\r\n        setHelperTextDescription(\"\");\r\n        setErrorTitle(false);\r\n        setErrorDescription(false);\r\n    }\r\n\r\n    useLayoutEffect(() => {\r\n        if (dialogState) {\r\n            setEnteredTitle(dialogState.title);\r\n            setEnteredDescription(dialogState.description);\r\n        }\r\n    }, [dialogState]);\r\n\r\n    return {\r\n        checkSave: onSave,\r\n        clearData: clearData,\r\n        title: enteredTitle,\r\n        description: enteredDescription,\r\n        element: (\r\n            <div>\r\n                <TextField autoFocus\r\n                           fullWidth\r\n                           error={errorTitle}\r\n                           helperText={helperTextTitle}\r\n                           value={enteredTitle}\r\n                           onChange={handleTitleChange}\r\n                           label=\"Titel des Targets\"/>\r\n                <TextField fullWidth\r\n                           multiline\r\n                           style={{marginTop: 16}}\r\n                           error={errorDescription}\r\n                           helperText={helperTextDescription}\r\n                           value={enteredDescription}\r\n                           onChange={handleDescriptionChange}\r\n                           label=\"Beschreibung des Targets\"/>\r\n            </div>\r\n        )\r\n    };\r\n};","import { hideDialog, useDialogState } from \"../../../logic/state-management/dialogs\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React from \"react\";\r\n\r\n/**\r\n * An edit-dialog using a \"form\" from a hook. Has buttons for \"SAVE\" and \"CANCEL\"\r\n *\r\n * @param {{\r\n *      name: {string},\r\n *      title: {string},\r\n *      saveAction: function(),\r\n *      form: {\r\n *          element: *,\r\n *          checkSave: (function():boolean)\r\n *      }\r\n *  }} props\r\n * @returns {*}\r\n */\r\nconst EditDialog = (props) => {\r\n    const theme = useTheme();\r\n    const dialogState = useDialogState(props.name)\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n\r\n    const hide = () => {\r\n        hideDialog(props.name);\r\n    }\r\n\r\n    const save = () => {\r\n        if (props.form.checkSave()) {\r\n            hide();\r\n            props.saveAction();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dialog open={dialogState ? dialogState.show : false}\r\n                onClose={hide}\r\n                fullScreen={fullScreen}\r\n                fullWidth>\r\n            <DialogTitle>{props.title}</DialogTitle>\r\n            <DialogContent>\r\n                {props.form.element}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={hide} color=\"primary\">ABBRECHEN</Button>\r\n                <Button onClick={save} color=\"primary\">SPEICHERN</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default EditDialog;","import React from \"react\";\r\nimport { useDialogState } from \"../../../../logic/state-management/dialogs\";\r\nimport { useEditTargetForm } from \"./edit-target-form\";\r\nimport EditDialog from \"../edit-dialog\";\r\n\r\nconst EditTargetDialog = (props) => {\r\n    const dialogState = useDialogState(props.name)\r\n    const form = useEditTargetForm(dialogState, props.maxTitleLength, props.maxDescriptionLength);\r\n\r\n    return (\r\n        <EditDialog\r\n            name={props.name}\r\n            title={\"Target bearbeiten\"}\r\n            saveAction={() => props.saveAction(dialogState.id, form.title, form.description)}\r\n            form={form}/>\r\n    );\r\n};\r\n\r\nexport default EditTargetDialog;\r\n\r\n// const EditTargetDialog = (props) => {\r\n//     const dialogState = useDialogState(props.name)\r\n//     const theme = useTheme();\r\n//     const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n//     const form = useEditTargetForm(dialogState, props.maxTitleLength, props.maxDescriptionLength);\r\n//\r\n//     const hide = () => {\r\n//         hideDialog(props.name);\r\n//     }\r\n//\r\n//     const save = () => {\r\n//         if (form.checkSave()) {\r\n//             hide();\r\n//             props.saveAction(dialogState.id, form.title, form.description);\r\n//         }\r\n//     }\r\n//\r\n//     return (\r\n//         <Dialog open={dialogState ? dialogState.show : false}\r\n//                 onClose={hide}\r\n//                 fullScreen={fullScreen}\r\n//                 fullWidth>\r\n//             <DialogTitle>Target bearbeiten</DialogTitle>\r\n//             <DialogContent>\r\n//                 {form.element}\r\n//             </DialogContent>\r\n//             <DialogActions>\r\n//                 <Button onClick={hide} color=\"primary\">ABBRECHEN</Button>\r\n//                 <Button onClick={save} color=\"primary\">SPEICHERN</Button>\r\n//             </DialogActions>\r\n//         </Dialog>\r\n//     );\r\n// };\r\n\r\n// const EditTargetDialog = (props) => {\r\n//     const dialogState = useDialogState(props.name)\r\n//     const theme = useTheme();\r\n//     const fullScreen = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n//\r\n//     const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n//     const [enteredDescription, setEnteredDescription] = useState(\"\");\r\n//\r\n//     const [errorTitle, setErrorTitle] = useState(false);\r\n//     const [errorDescription, setErrorDescription] = useState(false);\r\n//\r\n//     const [helperTextTitle, setHelperTextTitle] = useState(\"\");\r\n//     const [helperTextDescription, setHelperTextDescription] = useState(\"\");\r\n//\r\n//     const handleTitleChange = (event) => {\r\n//         setEnteredTitle(event.target.value);\r\n//         setErrorTitle(event.target.value.length > props.maxTitleLength);\r\n//\r\n//         if (event.target.value.length > props.maxTitleLength) setHelperTextTitle(`Titel darf nicht länger als ${props.maxTitleLength} Zeichen sein`);\r\n//         else setHelperTextTitle(\"\");\r\n//     };\r\n//\r\n//     const handleDescriptionChange = (event) => {\r\n//         setEnteredDescription(event.target.value);\r\n//         setErrorDescription(event.target.value.length > props.maxDescriptionLength);\r\n//\r\n//         if (event.target.value.length > props.maxDescriptionLength) setHelperTextDescription(`Beschreibung darf nicht länger als ${props.maxDescriptionLength} Zeichen sein`)\r\n//         else setHelperTextDescription(\"\");\r\n//     };\r\n//\r\n//     const hide = () => {\r\n//         hideDialog(props.name);\r\n//     }\r\n//\r\n//     const onSave = () => {\r\n//         if (enteredTitle.length === 0) {\r\n//             setErrorTitle(true);\r\n//             setHelperTextTitle(\"Titel darf nicht leer sein\")\r\n//         }\r\n//         if (enteredDescription.length === 0) {\r\n//             setErrorDescription(true);\r\n//             setHelperTextDescription(\"Beschreibung darf nicht leer sein\")\r\n//         }\r\n//\r\n//         if (enteredTitle.length > 0 && enteredTitle.length <= props.maxTitleLength\r\n//             && enteredDescription.length > 0 && enteredDescription.length <= props.maxDescriptionLength) {\r\n//\r\n//             hide();\r\n//             props.saveAction(dialogState.id, enteredTitle, enteredDescription);\r\n//         }\r\n//     };\r\n//\r\n//     useLayoutEffect(() => {\r\n//         if (dialogState) {\r\n//             setEnteredTitle(dialogState.title);\r\n//             setEnteredDescription(dialogState.description);\r\n//         }\r\n//     }, [dialogState]);\r\n//\r\n//     return (\r\n//         <Dialog open={dialogState ? dialogState.show : false}\r\n//                 onClose={hide}\r\n//                 fullScreen={fullScreen}\r\n//                 fullWidth>\r\n//             <DialogTitle>Target</DialogTitle>\r\n//             <DialogContent>\r\n//                 <TextField autoFocus\r\n//                            fullWidth\r\n//                            error={errorTitle}\r\n//                            helperText={helperTextTitle}\r\n//                            value={enteredTitle}\r\n//                            onChange={handleTitleChange}\r\n//                            id=\"title\"\r\n//                            label=\"Titel des Targets\"/>\r\n//                 <TextField fullWidth\r\n//                            multiline\r\n//                            style={{marginTop: 16}}\r\n//                            error={errorDescription}\r\n//                            helperText={helperTextDescription}\r\n//                            value={enteredDescription}\r\n//                            onChange={handleDescriptionChange}\r\n//                            id=\"description\"\r\n//                            label=\"Beschreibung des Targets\"/>\r\n//             </DialogContent>\r\n//             <DialogActions>\r\n//                 <Button onClick={hide} color=\"primary\">ABBRECHEN</Button>\r\n//                 <Button onClick={onSave} color=\"primary\">SPEICHERN</Button>\r\n//             </DialogActions>\r\n//         </Dialog>\r\n//     );\r\n// };\r\n","import React from \"react\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { ExpansionPanel } from \"@material-ui/core\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport { useEditTargetForm } from \"../../shared/target/edit-target-form\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { createTarget } from \"../../../../logic/state-management/api/actions\";\r\n\r\nconst useStyles = makeStyles({\r\n    textField: {\r\n        width: \"100%\"\r\n    },\r\n    button: {\r\n        float: \"right\",\r\n        marginTop: 16\r\n    },\r\n    spaceAtTop: {\r\n        marginTop: 8\r\n    },\r\n    fullWidth: {\r\n        width: \"100%\"\r\n    }\r\n});\r\n\r\nconst AddTargetPanel = (props) => {\r\n    const form = useEditTargetForm(null, props.maxTitleLength, props.maxDescriptionLength);\r\n    const classes = useStyles();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (form.checkSave()) {\r\n            createTarget({\r\n                title: form.title,\r\n                description: form.description\r\n            })\r\n        }\r\n        form.clearData();\r\n    }\r\n\r\n    return (\r\n        <ExpansionPanel>\r\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>}>\r\n                <Typography variant=\"body1\">Neues Target erstellen</Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n                <form noValidate autoComplete=\"off\" onSubmit={handleSubmit} className={classes.fullWidth}>\r\n                    {form.element}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}>\r\n                        Erstellen\r\n                    </Button>\r\n                </form>\r\n            </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n    );\r\n};\r\n\r\nexport default AddTargetPanel;","import React, { useLayoutEffect } from 'react';\r\nimport { useTitle } from \"hookrouter\";\r\nimport TargetCard from \"../../components/top-level/all-targets/target-card\";\r\nimport PageTitle from \"../../components/shared/page-title\";\r\nimport PageWrapper from \"../../components/shared/page-wrapper\";\r\nimport { useTargets } from \"../../../logic/state-management/api/hooks\";\r\nimport { hideDialog, useDialogState } from \"../../../logic/state-management/dialogs\";\r\nimport ConfirmDialog from \"../../components/shared/confirm-dialog\";\r\nimport { deleteTarget, updateTarget } from \"../../../logic/state-management/api/actions\";\r\nimport EditTargetDialog from \"../../components/shared/target/edit-target-dialog\";\r\nimport AddTargetPanel from \"../../components/top-level/all-targets/add-target-panel\";\r\n\r\nexport const TARGET_DELETE_DIALOG_NAME = \"target-delete-confirm\";\r\nexport const TARGET_EDIT_DIALOG_NAME = \"target-edit\";\r\n\r\nexport const MAX_TITLE_LENGTH = 70;\r\nexport const MAX_DESCRIPTION_LENGTH = 280;\r\n\r\nconst AllTargetsPage = () => {\r\n    useTitle(\"Alle Targets - quotracker\");\r\n    const targets = useTargets();\r\n    const deleteDialogState = useDialogState(TARGET_DELETE_DIALOG_NAME);\r\n\r\n    useLayoutEffect(() => {\r\n        return () => {\r\n            hideDialog(TARGET_EDIT_DIALOG_NAME);\r\n            hideDialog(TARGET_DELETE_DIALOG_NAME);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <PageWrapper>\r\n            {targets && (\r\n                <div>\r\n                    <PageTitle title=\"Alle Targets\"/>\r\n                    {Object.entries(targets).map(([id, target]) => {\r\n                        if (target.users) {\r\n                            return <TargetCard id={id} targetInfo={target.info} targetUsers={target.users} key={id}/>;\r\n                        }\r\n                        return null;\r\n                    })}\r\n                    <AddTargetPanel maxTitleLength={MAX_TITLE_LENGTH}\r\n                                    maxDescriptionLength={MAX_DESCRIPTION_LENGTH}/>\r\n\r\n                    {/* this is to add some padding to the bottom of the page */}\r\n                    <p/>\r\n\r\n                    <EditTargetDialog name={TARGET_EDIT_DIALOG_NAME}\r\n                                      maxTitleLength={MAX_TITLE_LENGTH}\r\n                                      maxDescriptionLength={MAX_DESCRIPTION_LENGTH}\r\n                                      saveAction={(targetId, title, description) => {\r\n                                          updateTarget(targetId, {title: title, description: description});\r\n                                      }}/>\r\n                    <ConfirmDialog open={deleteDialogState ? deleteDialogState.show : false}\r\n                                   title=\"Wirklich löschen?\"\r\n                                   text={`Soll das Target '${deleteDialogState?.title}' wirklich gelöscht werden? Einmal gelöscht, kann das Target (derzeit) nicht wiederhergestellt werden.`}\r\n                                   negativeText=\"BEHALTEN\"\r\n                                   positiveText=\"LÖSCHEN\"\r\n                                   negativeAction={() => {\r\n                                       hideDialog(TARGET_DELETE_DIALOG_NAME);\r\n                                   }}\r\n                                   positiveAction={() => {\r\n                                       hideDialog(TARGET_DELETE_DIALOG_NAME);\r\n                                       deleteTarget(deleteDialogState?.id);\r\n                                   }}/>\r\n                </div>\r\n            )}\r\n        </PageWrapper>\r\n    );\r\n};\r\n\r\nexport default AllTargetsPage;\r\n","import React from \"react\";\r\nimport { LinkedLink } from \"./links\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst BackLink = (props) => {\r\n    return (\r\n        <Typography className=\"cs-row\">\r\n            <LinkedLink href={props.href}>{props.text ? props.text : \"zurück zur Übersicht\"}</LinkedLink>\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport default BackLink;","import React from \"react\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport PageTitle from \"../../shared/page-title\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { setDialogInfo, showDialog } from \"../../../../logic/state-management/dialogs\";\r\nimport { TARGET_EDIT_DIALOG_NAME } from \"../../../pages/top-level/all-targets-page\";\r\n\r\nconst OverviewPageTitle = (props) => {\r\n    return (\r\n        <PageTitle title={props.title}>\r\n            {props.showEditIcon && (\r\n                <IconButton onClick={() => {\r\n                    setDialogInfo(TARGET_EDIT_DIALOG_NAME, {\r\n                        title: props.title,\r\n                        description: props.description,\r\n                        id: props.targetId\r\n                    });\r\n                    showDialog(TARGET_EDIT_DIALOG_NAME);\r\n                }} style={{marginLeft: 16}}><EditIcon/></IconButton>\r\n            )}\r\n        </PageTitle>\r\n    );\r\n}\r\n\r\nexport default OverviewPageTitle;","import React, { Fragment, useLayoutEffect, useState } from \"react\";\r\nimport { hideDialog, setDialogInfo, showDialog, useDialogState } from \"../../../../../logic/state-management/dialogs\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport { Checkbox, Popover } from \"@material-ui/core\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { usePermissions } from \"../../../../../logic/state-management/permissions\";\r\nimport { removeUser, updateUser } from \"../../../../../logic/state-management/api/actions\";\r\nimport ConfirmDialog from \"../../../shared/confirm-dialog\";\r\n\r\nexport const EDIT_USER_POPOVER_NAME = \"user-edit-popover\";\r\nconst REMOVE_USER_DIALOG_NAME = \"user-remove-confirm\";\r\n\r\n// @TODO rewrite and clean up this component\r\nconst EditUserPopover = ({targetId, users, anchor}) => {\r\n    const dialogState = useDialogState(EDIT_USER_POPOVER_NAME);\r\n    const show = dialogState?.show ? dialogState.show : false;\r\n\r\n    const removeDialogState = useDialogState(REMOVE_USER_DIALOG_NAME);\r\n\r\n    const {canEdit: canCurrentUserEdit} = usePermissions(users);\r\n\r\n    const [isOwner, setIsOwner] = useState(false);\r\n    const [canSubmitRecords, setCanSubmitRecords] = useState(false);\r\n    const [canEdit, setCanEdit] = useState(false);\r\n\r\n    useLayoutEffect(() => {\r\n        if (dialogState != null && dialogState.user) {\r\n            if (dialogState?.user?.canSubmitRecords == null && dialogState?.user?.canEdit == null) {\r\n                setIsOwner(true);\r\n                setCanSubmitRecords(true);\r\n                setCanEdit(true);\r\n            } else {\r\n                setIsOwner(false);\r\n                setCanSubmitRecords(dialogState.user.canSubmitRecords);\r\n                setCanEdit(dialogState.user.canEdit);\r\n            }\r\n        }\r\n    }, [dialogState, isOwner]);\r\n\r\n    useLayoutEffect(() => {\r\n        return () => {\r\n            hideDialog(REMOVE_USER_DIALOG_NAME);\r\n            close();\r\n        };\r\n    }, []);\r\n\r\n    const handleClose = () => {\r\n        const hasChanged = canSubmitRecords !== dialogState.user.canSubmitRecords || canEdit !== dialogState.user.canEdit;\r\n        if (!isOwner && hasChanged) {\r\n            updateUser(targetId, {\r\n                id: dialogState.user.id,\r\n                canSubmitRecords: canSubmitRecords,\r\n                canEdit: canEdit\r\n            });\r\n        }\r\n\r\n        close();\r\n    };\r\n\r\n    const handleRemoveUser = () => {\r\n        setDialogInfo(REMOVE_USER_DIALOG_NAME, {\r\n            user: dialogState.user,\r\n            targetId: targetId\r\n        });\r\n        showDialog(REMOVE_USER_DIALOG_NAME);\r\n    };\r\n\r\n    const close = () => {\r\n        setDialogInfo(EDIT_USER_POPOVER_NAME, null);\r\n        hideDialog(EDIT_USER_POPOVER_NAME);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <Popover\r\n                open={show}\r\n                anchorEl={show ? anchor : null}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"center\"\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"center\"\r\n                }}>\r\n                <Card>\r\n                    <List>\r\n                        <ListItem key=\"canSubmitRecords\">\r\n                            <ListItemText primary=\"Darf Records eintragen?\"/>\r\n                            <ListItemSecondaryAction>\r\n                                <Checkbox\r\n                                    edge=\"end\"\r\n                                    checked={canSubmitRecords}\r\n                                    onChange={event => {\r\n                                        setCanSubmitRecords(event.target.checked);\r\n                                        if (!event.target.checked) {\r\n                                            setCanEdit(false);\r\n                                        }\r\n                                    }}\r\n                                    disabled={isOwner || !canCurrentUserEdit}\r\n                                    color=\"primary\"/>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                        <ListItem key=\"canEdit\">\r\n                            <ListItemText primary=\"Darf bearbeiten?\"/>\r\n                            <ListItemSecondaryAction>\r\n                                <Checkbox\r\n                                    edge=\"end\"\r\n                                    checked={canEdit}\r\n                                    onChange={event => {\r\n                                        setCanEdit(event.target.checked);\r\n                                        if (event.target.checked) {\r\n                                            setCanSubmitRecords(true);\r\n                                        }\r\n                                    }}\r\n                                    disabled={isOwner || !canCurrentUserEdit}\r\n                                    color=\"primary\"/>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    </List>\r\n                    <CardActions>\r\n                        <Button\r\n                            color=\"secondary\"\r\n                            disabled={isOwner || !canCurrentUserEdit}\r\n                            onClick={handleRemoveUser}>\r\n                            PERSON ENTFERNEN\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n            </Popover>\r\n\r\n            <ConfirmDialog open={removeDialogState ? removeDialogState.show : false}\r\n                           title=\"Wirklich entfernen?\"\r\n                           text={`Soll '${removeDialogState?.user.name}' wirklich vom Target entfernt werden?`}\r\n                           negativeText=\"BEHALTEN\"\r\n                           positiveText=\"LÖSCHEN\"\r\n                           negativeAction={() => {\r\n                               hideDialog(REMOVE_USER_DIALOG_NAME);\r\n                           }}\r\n                           positiveAction={() => {\r\n                               hideDialog(REMOVE_USER_DIALOG_NAME);\r\n                               removeUser(removeDialogState?.targetId, removeDialogState?.user.id);\r\n                               close();\r\n                           }}/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default EditUserPopover;","import React, { Fragment, useState } from \"react\";\r\nimport { Box, CircularProgress, TextField } from \"@material-ui/core\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { tryAddUser } from \"../../../../../logic/state-management/api/actions\";\r\n\r\nconst AddUserInput = ({targetId, flexBoxClass, chipClass}) => {\r\n    const [text, setText] = useState(\"\");\r\n    const [chips, setChips] = useState([]);\r\n    const [failed, setFailed] = useState([]);\r\n\r\n    const searchForUser = (input) => {\r\n        if (!chips.includes(input)) {\r\n            // @TODO HIER GEHT ES WEITER!!\r\n            setChips(current => [...current, input]);\r\n\r\n            // @TODO make a search-call to the api\r\n            tryAddUser(targetId, {\r\n                email: input,\r\n                canSubmitRecords: false,\r\n                canEdit: false\r\n            }, status => {\r\n                if (status === \"OK\") {\r\n                    setChips(current => current.filter(elem => elem !== input));\r\n                } else {\r\n                    if (!failed.includes(input)) {\r\n                        setFailed(current => [...current, input]);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        // addUser(targetId, {\r\n        //     userId: `id(${input})`,\r\n        //     email: input,\r\n        //     canSubmitRecords: false,\r\n        //     canEdit: false\r\n        // });\r\n        setText(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        let input = event.target.value;\r\n        setText(input);\r\n\r\n        if (input.trim().length > 2 && input.endsWith(\" \")) {\r\n            searchForUser(input.trim());\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        searchForUser(text.trim());\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <Box component=\"ul\" className={flexBoxClass}>\r\n                {chips.map(name => (\r\n                    <Chip\r\n                        key={name}\r\n                        className={chipClass}\r\n                        label={name}\r\n                        color={!failed.includes(name) ? \"default\" : \"secondary\"}\r\n                        avatar={!failed.includes(name) ? <CircularProgress size={18} color=\"inherit\" thickness={6} /> : null}\r\n                        onDelete={!failed.includes(name) ? null : () => {\r\n                            setChips(current => current.filter(elem => elem !== name));\r\n                        }}\r\n                        onClick={() => {\r\n                            setText(name);\r\n                            setChips(current => current.filter(elem => elem !== name));\r\n                        }}\r\n                    />\r\n                ))}\r\n                <form noValidate autoComplete=\"off\" onSubmit={handleSubmit} style={{flexGrow: 1, marginLeft: 4}}>\r\n                    <TextField\r\n                        fullWidth\r\n                        value={text}\r\n                        onChange={onChange}\r\n                        label=\"Personen hinzufügen (E-Mail)\"\r\n                    />\r\n                </form>\r\n            </Box>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default AddUserInput;","import React, { Fragment } from \"react\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddUserInput from \"./add-user-input\";\r\nimport { usePermissions } from \"../../../../../logic/state-management/permissions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        // justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        padding: theme.spacing(0.0),\r\n        margin: 0,\r\n        alignItems: \"flex-end\"\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.25),\r\n    },\r\n}));\r\n\r\nconst ChipList = (props) => {\r\n    const classes = useStyles();\r\n    const {canEdit} = usePermissions(props.users);\r\n\r\n    return (\r\n        <Box component=\"ul\" className={classes.root}>\r\n            {props.mergedUsers.map((user) => {\r\n                const displayName = user.name;\r\n                const avatar = displayName.substring(0, 1).toUpperCase();\r\n\r\n                return (\r\n                    <Fragment key={user.name}>\r\n                        <li>\r\n                            <Chip className={classes.chip} avatar={<Avatar>{avatar}</Avatar>} label={displayName}\r\n                                  onClick={event => props.handleClick(event, user.id)}/>\r\n                        </li>\r\n                    </Fragment>\r\n                );\r\n            })}\r\n            {canEdit && (\r\n                <li key=\"new\" style={{flexGrow: 1}}>\r\n                    <AddUserInput targetId={props.targetId} flexBoxClass={classes.root} chipClass={classes.chip}/>\r\n                </li>\r\n            )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ChipList;","import React, { Fragment, useState } from \"react\";\r\nimport { setDialogInfo, showDialog } from \"../../../../../logic/state-management/dialogs\";\r\nimport EditUserPopover, { EDIT_USER_POPOVER_NAME } from \"./edit-user-popover\";\r\nimport ChipList from \"./chip-list\";\r\n\r\nconst UsersManager = (props) => {\r\n    const mergedUsers = [props.users.owner, ...props.users.guests];\r\n    const [anchor, setAnchor] = useState(null);\r\n\r\n    const handleClick = (event, userId) => {\r\n        setAnchor(event.currentTarget);\r\n        setDialogInfo(EDIT_USER_POPOVER_NAME, {\r\n            user: mergedUsers.find(elem => elem.id === userId)\r\n        });\r\n        showDialog(EDIT_USER_POPOVER_NAME);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <ChipList targetId={props.targetId} users={props.users} mergedUsers={mergedUsers} handleClick={handleClick}/>\r\n            <EditUserPopover targetId={props.targetId} users={props.users} anchor={anchor}/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default UsersManager;","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Caption = (props) => {\r\n    return (\r\n        <Typography variant=\"body1\" className=\"cs-caption\">\r\n            {props.text}{props.children}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport default Caption;","import React, { Fragment } from \"react\";\r\nimport BackLink from \"../../shared/back-link\";\r\nimport OverviewPageTitle from \"./overview-page-title\";\r\nimport UsersManager from \"./users/users-manager\";\r\nimport Caption from \"../../shared/caption\";\r\n\r\nconst OverviewHeader = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <OverviewPageTitle targetId={props.targetId} title={props.title} description={props.description} showEditIcon={props.permissions.canEdit}/>\r\n            <BackLink href={\"/alltargets\"} text=\"zurück zur Liste\"/>\r\n            <Caption text={props.description}/>\r\n            <UsersManager targetId={props.targetId} users={props.users}/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default OverviewHeader;","import React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { LinkedButton } from \"../../shared/links\";\r\n\r\nconst HorizontalButtonGroup = (props) => {\r\n    return (\r\n        <Box className=\"cs-button-group\">\r\n            {props.buttons.map(button => (\r\n                <LinkedButton key={button.href} variant=\"outlined\" disabled={button.disabled} color=\"secondary\" href={button.href}>\r\n                    {button.text}\r\n                </LinkedButton>\r\n            ))}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default HorizontalButtonGroup;","import React, { Fragment } from \"react\";\r\nimport PageTitle from \"../../shared/page-title\";\r\nimport Caption from \"../../shared/caption\";\r\nimport HorizontalButtonGroup from \"./horizontal-button-group\";\r\nimport moment from \"moment\";\r\n\r\nconst OverviewSummary = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <PageTitle title=\"Zusammenfassung\"/>\r\n            <Caption text={`${props.quotesSummarized.amountQuotes} Sprüche und insgesamt ${props.quotesSummarized.totalRecords} Einträge seit dem ${moment(props.createdOn).format(\"L\")}`}/>\r\n            <HorizontalButtonGroup buttons={[\r\n                { href: \"./insert\", text: \"Eintragen\", disabled: !props.permissions.canSubmitRecords },\r\n                { href: \"./quotes\", text: \"Sprüche\" }\r\n            ]}/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default OverviewSummary;","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst PageTitle2 = (props) => {\r\n    return (\r\n        <Box className=\"page-title-2\">\r\n            <Typography variant=\"h4\">{props.title}{props.children}</Typography>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default PageTitle2;","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst StatsListing = (props) => {\r\n    return (\r\n        <Typography variant=\"body1\" style={{marginBottom: 16}} component=\"div\">\r\n            {Object.entries(props.quotes).map(([key, value], index) => {\r\n                return (\r\n                    <span key={index}>\r\n                        {key}: {value}<br/>\r\n                    </span>\r\n                );\r\n            })}\r\n        </Typography>\r\n    );\r\n};\r\n\r\nexport default StatsListing;","import React, { Fragment } from \"react\";\r\nimport PageTitle2 from \"../../shared/page-title-2\";\r\nimport Caption from \"../../shared/caption\";\r\nimport { LinkedButton } from \"../../shared/links\";\r\nimport StatsListing from \"./stats-listing\";\r\n\r\nconst OverviewStats = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <PageTitle2 title=\"Statistik\"/>\r\n\r\n            <Caption text=\"Heute\"> <LinkedButton variant=\"outlined\" href={\"statistics\"} size=\"small\">ANZEIGEN</LinkedButton></Caption>\r\n            {props.stats && (\r\n                <StatsListing quotes={\r\n                    // props.stats.find(element => element.forTimeframe === \"today\").quotes\r\n                    props.stats.today\r\n                }/>\r\n            )}\r\n\r\n            <Caption text=\"Insgesamt\"> <LinkedButton variant=\"outlined\" href={\"statistics\"} size=\"small\">ANZEIGEN</LinkedButton></Caption>\r\n            {props.stats && (\r\n                <StatsListing quotes={\r\n                    // props.stats.find(element => element.forTimeframe === \"full\").quotes\r\n                    props.stats.full\r\n                }/>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default OverviewStats;","import React, { useLayoutEffect } from \"react\";\r\nimport { useTitle } from \"hookrouter\";\r\nimport PageWrapper from \"../../components/shared/page-wrapper\";\r\nimport OverviewHeader from \"../../components/target/overview/overview-header\";\r\nimport OverviewSummary from \"../../components/target/overview/overview-summary\";\r\nimport OverviewStats from \"../../components/target/overview/overview-stats\";\r\nimport { useOverview } from \"../../../logic/state-management/api/hooks\";\r\nimport { updateTarget } from \"../../../logic/state-management/api/actions\";\r\nimport EditTargetDialog from \"../../components/shared/target/edit-target-dialog\";\r\nimport {\r\n    MAX_DESCRIPTION_LENGTH,\r\n    MAX_TITLE_LENGTH,\r\n    TARGET_EDIT_DIALOG_NAME\r\n} from \"../top-level/all-targets-page\";\r\nimport { usePermissions } from \"../../../logic/state-management/permissions\";\r\nimport { hideDialog } from \"../../../logic/state-management/dialogs\";\r\n\r\nconst summarizeQuotes = (quotes, stats) => {\r\n    let total = 0;\r\n    if (stats?.full && Object.entries(stats.full).length > 0) {\r\n        total = Object.values(stats.full).reduce((total, amount) => total + amount)\r\n    }\r\n\r\n    return {\r\n        amountQuotes: quotes ? Object.entries(quotes).length : 0,\r\n        totalRecords: total\r\n    };\r\n};\r\n\r\nconst buildSimpleStats = (quotes, stats) => {\r\n    let simpleStats = {};\r\n    if (quotes && stats) {\r\n        for (let [key, value] of Object.entries(quotes)) {\r\n            simpleStats[value.text] = stats[key];\r\n        }\r\n    }\r\n    return simpleStats;\r\n}\r\n\r\nconst OverviewPage = (props) => {\r\n    useTitle(\"Übersicht - quotracker\");\r\n    const target = useOverview(props.targetId);\r\n    const permissions = usePermissions(target?.users ? target.users : []);\r\n\r\n    useLayoutEffect(() => {\r\n        return () => {\r\n            hideDialog(TARGET_EDIT_DIALOG_NAME);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <PageWrapper>\r\n            {(target && target.users && target.info && target.quotes && target.stats) && (\r\n                <div>\r\n                    <OverviewHeader targetId={props.targetId} title={target.info.title} description={target.info.description}\r\n                                    users={target.users ? target.users : []} permissions={permissions}/>\r\n                    <OverviewSummary createdOn={target.info.createdOn} permissions={permissions}\r\n                                     quotesSummarized={summarizeQuotes(target.quotes, target.stats)}/>\r\n                    <OverviewStats stats={\r\n                        {\r\n                            today: buildSimpleStats(target.quotes, target.stats?.today),\r\n                            full: buildSimpleStats(target.quotes, target.stats?.full)\r\n                        }\r\n                    }/>\r\n                    <EditTargetDialog name={TARGET_EDIT_DIALOG_NAME}\r\n                                      maxTitleLength={MAX_TITLE_LENGTH}\r\n                                      maxDescriptionLength={MAX_DESCRIPTION_LENGTH}\r\n                                      saveAction={(targetId, title, description) => {\r\n                                          updateTarget(targetId, {title: title, description: description});\r\n                                      }}/>\r\n                </div>\r\n            )}\r\n        </PageWrapper>\r\n    );\r\n};\r\n\r\nexport default OverviewPage;","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { createRecord, deleteLatestRecord } from \"../../../../logic/state-management/api/actions\";\r\n\r\nconst InsertRow = (props) => {\r\n    const targetId = props.targetId;\r\n    const quoteId = props.quoteId;\r\n    const quoteText = props.quote.text;\r\n    const quoteCount = props.quote.count;\r\n\r\n    return (\r\n        <Grid container item xs={12} spacing={3} direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n            <Grid item xs={9} sm={7} md={5}>\r\n                <Button size=\"large\" variant=\"outlined\" color=\"primary\"\r\n                        onClick={() => createRecord(targetId, quoteId)}>\r\n                    {quoteText}\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n                <Typography variant=\"body1\" component=\"div\">\r\n                    {quoteCount}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={2} md={1}>\r\n                <Button variant=\"text\" onClick={() => deleteLatestRecord(targetId, quoteId)}>\r\n                    ( -1 )\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default InsertRow;","import React from \"react\";\r\nimport InsertRow from \"./insert-row\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst InsertButtonsWrapper = (props) => {\r\n    return (\r\n        <Grid container spacing={2} direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n            {props.quotes && Object.entries(props.quotes).map(([id, value]) => (\r\n                <InsertRow key={id} targetId={props.targetId} quoteId={id} quote={value}/>\r\n            ))}\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default InsertButtonsWrapper;","import React from \"react\";\r\nimport { useTitle } from \"hookrouter\";\r\nimport PageWrapper from \"../../components/shared/page-wrapper\";\r\nimport PageTitle from \"../../components/shared/page-title\";\r\nimport BackLink from \"../../components/shared/back-link\";\r\nimport InsertButtonsWrapper from \"../../components/target/insert/insert-buttons-wrapper\";\r\nimport { useStats } from \"../../../logic/state-management/api/hooks\";\r\n\r\nconst InsertPage = (props) => {\r\n    useTitle(\"Eintragen - quotracker\");\r\n    // console.log(\"InsertPage begin\");\r\n    const stats = useStats(props.targetId);\r\n    // console.log(\"InsertPage end\");\r\n\r\n    // const {loading} = useAuth0();\r\n    // useEffect(() => {\r\n    //     console.log(`--- InsertPage useEffect ${loading}`);\r\n    // }, [loading]);\r\n\r\n    return (\r\n        <PageWrapper>\r\n            <PageTitle title=\"Eintragen\"/>\r\n            <BackLink href={\"./overview\"}/>\r\n            {stats && (\r\n                <InsertButtonsWrapper targetId={props.targetId} quotes={stats.today}/>\r\n            )}\r\n            {/*    find(elem => elem.forTimeframe === \"today\")*/}\r\n        </PageWrapper>\r\n    );\r\n};\r\n\r\nexport default InsertPage;\r\n\r\n// const useStyles = makeStyles({\r\n//     styledButton: {\r\n//         background: (props) =>\r\n//             props.color === 'red'\r\n//                 ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n//                 : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n//         border: 0,\r\n//         borderRadius: 3,\r\n//         boxShadow: (props) =>\r\n//             props.color === 'red'\r\n//                 ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\r\n//                 : '0 3px 5px 2px rgba(33, 203, 243, .3)',\r\n//         color: 'white',\r\n//         height: 48,\r\n//         padding: '0 30px',\r\n//         margin: 8,\r\n//     }\r\n// });\r\n\r\n// const StyledButton = (props) => {\r\n//   const {color, ...other} = props;\r\n//   const classes = useStyles(props);\r\n//   return <Button className={classes.styledButton} {...other}/>;\r\n// };\r\n","import React from \"react\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport { setDialogInfo, showDialog } from \"../../../../logic/state-management/dialogs\";\r\nimport { QUOTES_CONFIRM_DIALOG_NAME, QUOTES_EDIT_DIALOG_NAME } from \"../../../pages/target/quotes-page\";\r\n\r\nconst QuotesListItem = (props) => {\r\n    return (\r\n        <ListItem>\r\n            <ListItemText primary={props.text}/>\r\n            <ListItemSecondaryAction>\r\n                {props.showEdit && (\r\n                    <IconButton onClick={() => {\r\n                        setDialogInfo(QUOTES_EDIT_DIALOG_NAME, {quote: props.text, id: props.id})\r\n                        showDialog(QUOTES_EDIT_DIALOG_NAME);\r\n                    }}>\r\n                        <EditIcon/>\r\n                    </IconButton>\r\n                )}\r\n                {props.showDelete && (\r\n                    <IconButton onClick={() => {\r\n                        setDialogInfo(QUOTES_CONFIRM_DIALOG_NAME, {quote: props.text, id: props.id})\r\n                        showDialog(QUOTES_CONFIRM_DIALOG_NAME);\r\n                    }}>\r\n                        <DeleteIcon/>\r\n                    </IconButton>\r\n                )}\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nexport default QuotesListItem;","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport QuotesListItem from \"./quotes-list-item\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst QuotesList = (props) => {\r\n    return (\r\n        <List>\r\n            {Object.entries(props.quotes).map(([id, value]) => (\r\n                <div key={id}>\r\n                    <Divider/>\r\n                    <QuotesListItem id={id} text={value.text} showEdit={props.canEdit} showDelete={props.canEdit}/>\r\n                </div>\r\n            ))}\r\n            <Divider/>\r\n        </List>\r\n    );\r\n};\r\n\r\nexport default QuotesList;","import React, { useLayoutEffect, useState } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\n/**\r\n * @param dialogState {null|{quote: {string}}}\r\n * @param maxQuoteLength {number}\r\n * @param label {string}\r\n * @param variant {string}\r\n * @returns {{checkSave: (function(): boolean), quote: string, element: *}}\r\n */\r\nexport const useEditQuotesForm = (dialogState, maxQuoteLength, label, variant = \"outlined\") => {\r\n    const [enteredText, setEnteredText] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n    const [helperText, setHelperText] = useState(\"\");\r\n\r\n    const handleChange = (event) => {\r\n        setEnteredText(event.target.value);\r\n        setError(event.target.value.length > maxQuoteLength);\r\n\r\n        if (event.target.value.length > maxQuoteLength) setHelperText(`Spruch darf nicht länger als ${maxQuoteLength} Zeichen sein`);\r\n        else setHelperText(\"\");\r\n    }\r\n\r\n    const onSave = () => {\r\n        if (enteredText.length === 0) {\r\n            setError(true);\r\n            setHelperText(\"Spruch darf nicht leer sein\");\r\n        }\r\n        if (enteredText.length > 0 && enteredText.length <= maxQuoteLength) {\r\n            setEnteredText(\"\");\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n    \r\n    useLayoutEffect(() => {\r\n        if (dialogState) {\r\n            setEnteredText(dialogState.quote);\r\n        }\r\n    }, [dialogState]);\r\n\r\n    return {\r\n        checkSave: onSave,\r\n        quote: enteredText,\r\n        element: (\r\n            <TextField label={label}\r\n                       variant={variant}\r\n                       fullWidth\r\n                       size=\"small\"\r\n                       error={error}\r\n                       helperText={helperText}\r\n                       value={enteredText}\r\n                       onChange={handleChange}/>\r\n        )\r\n    };\r\n}","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useEditQuotesForm } from \"./edit-quote-form\";\r\n\r\nconst useStyles = makeStyles({\r\n    textField: {\r\n        width: \"100%\"\r\n    },\r\n    button: {\r\n        float: \"right\"\r\n    },\r\n    spaceAtTop: {\r\n        marginTop: 8\r\n    }\r\n});\r\n\r\nconst QuotesAddForm = (props) => {\r\n    const classes = useStyles();\r\n    const form = useEditQuotesForm(null, props.maxQuoteLength, \"Neuen Spruch hinzufügen\");\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (form.checkSave()) {\r\n            props.onCheckedConfirm(form.quote);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form noValidate autoComplete=\"off\" onSubmit={handleSubmit} className={classes.spaceAtTop}>\r\n            <Grid container spacing={2} direction=\"row\" alignItems=\"flex-start\" justify=\"space-between\">\r\n                <Grid item xs key=\"text-field\">\r\n                    {form.element}\r\n                </Grid>\r\n                <Grid item xs={12} sm={3} md={2} key=\"button\">\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}>\r\n                        Hinzufügen\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    );\r\n};\r\n\r\n// const QuotesAddForm = (props) => {\r\n//     const [enteredText, setEnteredText] = useState(\"\");\r\n//     const [error, setError] = useState(false);\r\n//     const [helperText, setHelperText] = useState(\"\");\r\n//     const classes = useStyles();\r\n//\r\n//     const handleChange = (event) => {\r\n//         setEnteredText(event.target.value);\r\n//         setError(event.target.value.length > props.maxQuoteLength);\r\n//\r\n//         // if (event.target.value.length === 0) setHelperText(\"Spruch darf nicht leer sein\");\r\n//         if (event.target.value.length > props.maxQuoteLength) setHelperText(`Spruch darf nicht länger als ${props.maxQuoteLength} Zeichen sein`);\r\n//         else setHelperText(\"\");\r\n//     }\r\n//\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n//         if (enteredText.length === 0) {\r\n//             setError(true);\r\n//             setHelperText(\"Spruch darf nicht leer sein\");\r\n//         }\r\n//         if (enteredText.length > 0 && enteredText.length <= props.maxQuoteLength) {\r\n//             props.onCheckedConfirm(enteredText);\r\n//             setEnteredText(\"\");\r\n//         }\r\n//     };\r\n//\r\n//     return (\r\n//         <form noValidate autoComplete=\"off\" onSubmit={handleSubmit} className={classes.spaceAtTop}>\r\n//             <Grid container spacing={2} direction=\"row\" alignItems=\"flex-start\" justify=\"space-between\">\r\n//                 <Grid item xs key=\"text-field\">\r\n//                     <TextField id=\"entered-text\"\r\n//                                label=\"Neuen Spruch eingeben\"\r\n//                                variant=\"outlined\"\r\n//                                className={classes.textField}\r\n//                                size=\"small\"\r\n//                                error={error}\r\n//                                helperText={helperText}\r\n//                                value={enteredText}\r\n//                                onChange={handleChange}/>\r\n//                 </Grid>\r\n//                 <Grid item xs={12} sm={3} md={2} key=\"button\">\r\n//                     <Button\r\n//                         type=\"submit\"\r\n//                         variant=\"contained\"\r\n//                         color=\"primary\"\r\n//                         className={classes.button}>\r\n//                         Hinzufügen\r\n//                     </Button>\r\n//                 </Grid>\r\n//             </Grid>\r\n//         </form>\r\n//     );\r\n// };\r\n\r\nexport default QuotesAddForm;","import React from \"react\";\r\nimport { useDialogState } from \"../../../../logic/state-management/dialogs\";\r\nimport { useEditQuotesForm } from \"./edit-quote-form\";\r\nimport EditDialog from \"../../shared/edit-dialog\";\r\n\r\nconst EditQuoteDialog = (props) => {\r\n    const dialogState = useDialogState(props.name);\r\n    const form = useEditQuotesForm(dialogState, props.maxQuoteLength);\r\n\r\n    return (\r\n        <EditDialog\r\n            name={props.name}\r\n            title={\"Spruche bearbeiten\"}\r\n            saveAction={() => props.saveAction(dialogState.id, form.quote)}\r\n            form={form}/>\r\n    );\r\n};\r\n\r\nexport default EditQuoteDialog;","import React, { useLayoutEffect } from \"react\";\r\nimport { useTitle } from \"hookrouter\";\r\nimport PageWrapper from \"../../components/shared/page-wrapper\";\r\nimport PageTitle from \"../../components/shared/page-title\";\r\nimport BackLink from \"../../components/shared/back-link\";\r\nimport QuotesList from \"../../components/target/quotes/quotes-list\";\r\nimport QuotesAddForm from \"../../components/target/quotes/quotes-add-form\";\r\nimport ConfirmDialog from \"../../components/shared/confirm-dialog\";\r\nimport { hideDialog, useDialogState } from \"../../../logic/state-management/dialogs\";\r\nimport { useQuotes, useUsers } from \"../../../logic/state-management/api/hooks\";\r\nimport { createQuote, deleteQuote, updateQuote } from \"../../../logic/state-management/api/actions\";\r\nimport { usePermissions } from \"../../../logic/state-management/permissions\";\r\nimport EditQuoteDialog from \"../../components/target/quotes/edit-quote-dialog\";\r\n\r\nexport const QUOTES_CONFIRM_DIALOG_NAME = \"quote-delete-confirm\";\r\nexport const QUOTES_EDIT_DIALOG_NAME = \"quote-edit\";\r\n\r\nconst MAX_QUOTE_LENGTH = 100;\r\n\r\nconst QuotesPage = (props) => {\r\n    useTitle(\"Sprüche - quotracker\");\r\n    const quotes = useQuotes(props.targetId)\r\n    const dialogState = useDialogState(QUOTES_CONFIRM_DIALOG_NAME);\r\n    const users = useUsers(props.targetId);\r\n    const permissions = usePermissions(users);\r\n\r\n    useLayoutEffect(() => {\r\n        return () => {\r\n            hideDialog(QUOTES_EDIT_DIALOG_NAME);\r\n            hideDialog(QUOTES_CONFIRM_DIALOG_NAME);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <PageWrapper>\r\n            <PageTitle title=\"Sprüche\"/>\r\n            <BackLink href={\"overview\"}/>\r\n            {quotes && (\r\n                <QuotesList quotes={quotes} canEdit={permissions.canEdit}/>\r\n            )}\r\n\r\n            <ConfirmDialog\r\n                open={dialogState ? dialogState.show : false}\r\n                title=\"Wirklich löschen?\"\r\n                text={`Soll der Spruch '${dialogState?.quote}' wirklich gelöscht werden? Einmal gelöscht, kann ein Spruch (derzeit) nicht wiederhergestellt werden!`}\r\n                negativeText=\"BEHALTEN\"\r\n                positiveText=\"LÖSCHEN\"\r\n                negativeAction={() => {\r\n                    hideDialog(QUOTES_CONFIRM_DIALOG_NAME);\r\n                }}\r\n                positiveAction={() => {\r\n                    hideDialog(QUOTES_CONFIRM_DIALOG_NAME);\r\n                    deleteQuote(props.targetId, dialogState?.id);\r\n                }}/>\r\n            <EditQuoteDialog\r\n                name={QUOTES_EDIT_DIALOG_NAME}\r\n                maxQuoteLength={MAX_QUOTE_LENGTH}\r\n                saveAction={(id, quote) => {\r\n                    updateQuote(props.targetId, id, quote);\r\n                }}/>\r\n\r\n            {permissions.canEdit && (\r\n                <QuotesAddForm maxQuoteLength={MAX_QUOTE_LENGTH}\r\n                               onCheckedConfirm={(text) => createQuote(props.targetId, text)}/>\r\n            )}\r\n        </PageWrapper>\r\n    );\r\n};\r\n\r\nexport default QuotesPage;","import React from \"react\";\r\nimport { useTitle } from \"hookrouter\";\r\nimport PageWrapper from \"../../components/shared/page-wrapper\";\r\nimport PageTitle from \"../../components/shared/page-title\";\r\nimport BackLink from \"../../components/shared/back-link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst StatsPage = (props) => {\r\n    useTitle(\"Statistik - quotracker\");\r\n    // const quotes = useQuotes(props.targetId, 30);\r\n    // const records = useRecords(props.targetId);\r\n\r\n    return (\r\n        <PageWrapper>\r\n            <PageTitle title=\"Statistik\"/>\r\n            <BackLink href={\"overview\"}/>\r\n\r\n            <Typography variant=\"body1\">Hier wird in der nächsten Version die Statistik aller Sprüche zu sehen sein.</Typography>\r\n\r\n            {/*{quotes && (*/}\r\n            {/*    <p>{JSON.stringify(quotes)}</p>*/}\r\n            {/*)}*/}\r\n\r\n            {/*{records && (*/}\r\n            {/*    <p>{JSON.stringify(records)}</p>*/}\r\n            {/*)}*/}\r\n        </PageWrapper>\r\n    );\r\n};\r\n\r\nexport default StatsPage;","import React from 'react';\r\nimport {navigate, useRoutes} from \"hookrouter\";\r\nimport NotFoundPage from \"./not-found-page\";\r\nimport OverviewPage from \"../target/overview-page\";\r\nimport InsertPage from \"../target/insert-page\";\r\nimport QuotesPage from \"../target/quotes-page\";\r\nimport StatsPage from \"../target/stats-page\";\r\n\r\nconst routes = {\r\n  \"/:tid\": ({tid}) => { navigate(`${tid}/overview`, true) }, // @TODO find a better solution for this, it will cause an error when navigating first time to /:tid (bad setState call)\r\n  // \"/:tid/:page\": ({tid, page}) => <TargetsPage tid={tid} page={page} />\r\n  \"/:tid/overview\": ({tid}) => <OverviewPage targetId={tid}/>,\r\n  \"/:tid/insert\": ({tid}) => <InsertPage targetId={tid}/>,\r\n  \"/:tid/quotes\": ({tid}) => <QuotesPage targetId={tid}/>,\r\n  \"/:tid/statistics\": ({tid}) => <StatsPage targetId={tid}/>,\r\n};\r\n\r\nconst TargetNestedRouter = () => {\r\n  const routeResult = useRoutes(routes);\r\n  return routeResult || <NotFoundPage/>;\r\n};\r\n\r\nexport default TargetNestedRouter;\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"../../../react-auth0-spa\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { LinkedButton } from \"../../components/shared/links\";\r\nimport { useTitle } from \"hookrouter\";\r\nimport PageTitle from \"../../components/shared/page-title\";\r\nimport PageWrapper from \"../../components/shared/page-wrapper\";\r\nimport Caption from \"../../components/shared/caption\";\r\n\r\nconst HomePage = () => {\r\n    useTitle(\"Home - quotracker\");\r\n    const {isAuthenticated, loginWithRedirect} = useAuth0();\r\n\r\n    // console.log(\"re-render!\");\r\n\r\n    return (\r\n        <PageWrapper>\r\n            <PageTitle title=\"quotracker\"/>\r\n            <Caption text=\"<< Track die Sprüche deiner Profs/Lehrer >>\"/>\r\n            <br/>\r\n\r\n            {/* @TODO write welcome text for the homepage (landing-page alike, maybe with [interactive] examples) */}\r\n            {!isAuthenticated && (\r\n                <Button variant=\"contained\" color=\"primary\"\r\n                        onClick={() => loginWithRedirect()}>Anmelden/Registrieren</Button>\r\n            )}\r\n            {isAuthenticated && (\r\n                <LinkedButton variant=\"contained\" color=\"primary\" href={\"/alltargets\"}>Zu allen Targets</LinkedButton>\r\n            )}\r\n            {/*<Button variant=\"contained\" onClick={() => dispatch(showLoading())}>start loading</Button>*/}\r\n            {/*<Button variant=\"contained\" onClick={() => dispatch(hideLoading())}>stop loading</Button>*/}\r\n            {/*<Button variant=\"contained\" onClick={() => setErrorMessage(\"This is a test\")}>Set global error</Button>*/}\r\n            {/*<Button variant=\"contained\" onClick={() => clearErrorMessage()}>Remove global error</Button>*/}\r\n        </PageWrapper>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { LinkedButton } from \"../../components/shared/links\";\r\nimport { useTitle } from \"hookrouter\";\r\nimport PageWrapper from \"../../components/shared/page-wrapper\";\r\nimport PageTitle from \"../../components/shared/page-title\";\r\n\r\nconst LogoutPage = () => {\r\n    useTitle(\"Logout - quotracker\");\r\n    return (\r\n        <PageWrapper>\r\n            <PageTitle title=\"Ausgeloggt\"/>\r\n            <Typography variant=\"body1\" style={{marginBottom: 12}}>\r\n                Du hast dich erfolgreich ausgeloggt!\r\n            </Typography>\r\n            <LinkedButton variant=\"contained\" color=\"primary\" href=\"/\">Zur Startseite</LinkedButton>\r\n        </PageWrapper>\r\n    );\r\n};\r\n\r\nexport default LogoutPage;","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst MainLoader = () => {\r\n    return (\r\n        <div style={{\r\n            position: \"fixed\",\r\n            left: \"50%\",\r\n            top: \"50%\",\r\n            transform: \"translate(-50%, -50%)\"\r\n        }}>\r\n            <Typography variant=\"h3\" component=\"h1\" className=\"animated-dots\">Einloggen<span>.</span><span>.</span><span>.</span></Typography>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainLoader;","import React, { useLayoutEffect, useState } from \"react\";\r\nimport { clearErrorMessage, useErrorMessage } from \"../../../logic/state-management/error-message\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n/**\r\n * Use can either use useAlert = true with severity OR action with actionName\r\n */\r\nconst StateSnackbar = ({errorState, useAlert = true, severity = \"error\", actionName = \"Rückgängig machen\", action = null}) => {\r\n    const errorMessage = useErrorMessage(errorState);\r\n\r\n    const error = errorMessage;\r\n    const open = !!errorMessage;\r\n    const [latestError, setLatestError] = useState(\"\");\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        if (open) {\r\n            clearErrorMessage(errorState);\r\n        }\r\n    };\r\n\r\n    let alert = null;\r\n    if (useAlert) {\r\n        alert = (\r\n            <Alert severity={severity} onClose={handleClose}>\r\n                {latestError}\r\n            </Alert>\r\n        );\r\n    }\r\n\r\n    useLayoutEffect(() => {\r\n        if (error) {\r\n            setLatestError(error);\r\n        }\r\n    }, [error]);\r\n\r\n    return (\r\n        <Snackbar\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n            }}\r\n            open={open}\r\n            autoHideDuration={6000}\r\n            // action={action && <Button onClick={action} size=\"small\" color=\"secondary\">{actionName}</Button>}\r\n            message={action && latestError}\r\n            onClose={handleClose}\r\n            action={action && (\r\n                <React.Fragment>\r\n                    <Button color=\"secondary\" size=\"small\" onClick={action}>\r\n                        UNDO\r\n                    </Button>\r\n                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                        <CloseIcon fontSize=\"small\"/>\r\n                    </IconButton>\r\n                </React.Fragment>\r\n            )}>\r\n            {alert}\r\n        </Snackbar>\r\n    );\r\n};\r\n\r\nexport default StateSnackbar;","import React, { useEffect } from 'react';\r\nimport NotFoundPage from \"./ui/pages/top-level/not-found-page\";\r\nimport AppHeader from \"./ui/components/root/app-header\";\r\nimport AllTargetsPage from \"./ui/pages/top-level/all-targets-page\";\r\nimport TargetNestedRouter from \"./ui/pages/top-level/target-nested-router\";\r\nimport \"./App.css\";\r\nimport { usePath, useRoutes } from \"hookrouter\";\r\nimport HomePage from \"./ui/pages/top-level/home-page\";\r\nimport { useAuth0 } from \"./react-auth0-spa\";\r\nimport LogoutPage from \"./ui/pages/top-level/logout-page\";\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport orange from \"@material-ui/core/colors/orange\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport MainLoader from \"./ui/components/root/main-loader\";\r\nimport StateSnackbar from \"./ui/components/root/state-snackbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: blue,\r\n        secondary: orange,\r\n    },\r\n});\r\n\r\nconst routes = {\r\n    \"/\": () => <HomePage/>,\r\n    \"/alltargets\": () => <AllTargetsPage/>,\r\n    \"/target*\": () => <TargetNestedRouter/>,\r\n    \"/logout\": () => <LogoutPage/>,\r\n};\r\n\r\nconst basePath = process.env.PUBLIC_URL;\r\nconst publicPaths = [\r\n    \"\",\r\n    \"/\",\r\n    \"/logout\",\r\n    \"/404\",\r\n    `${basePath}`,\r\n    `${basePath}/logout`,\r\n    `${basePath}/404`\r\n];\r\n\r\nconst App = () => {\r\n    const path = usePath();\r\n    const {loading, isAuthenticated, loginWithRedirect} = useAuth0();\r\n    //const error = useErrorMessage();\r\n\r\n    // only takes effect after the page is rendered an the content has been attempted to be loaded\r\n    useEffect(() => {\r\n        // if the content is loading, the user is already authenticated or you are on one of the public pages --> do nothing\r\n        if (loading || isAuthenticated || publicPaths.includes(path)) {\r\n            return;\r\n        }\r\n\r\n        // start the login procedure, but as the state it sets the current path. the user will be redirected to\r\n        // this path once the login is successful\r\n        const awaitLogin = async () => {\r\n            await loginWithRedirect({\r\n                appState: {\r\n                    targetUrl: window.location.pathname\r\n                }\r\n            });\r\n        };\r\n        awaitLogin();\r\n    }, [loading, isAuthenticated, loginWithRedirect, path]);\r\n\r\n    const routeResult = useRoutes(routes);\r\n\r\n    if (loading) {\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <MainLoader/>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <AppHeader/>\r\n            {/*<ErrorSnackbar open={!!error} error={error}/>*/}\r\n            <StateSnackbar errorState=\"global\"/>\r\n            {routeResult || <NotFoundPage/>}\r\n            <Typography variant=\"body2\" style={{\r\n                position: \"fixed\",\r\n                left: 0,\r\n                bottom: 0,\r\n                color: \"#ccc\"\r\n            }}>Version 0.6.9</Typography>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './service-worker';\r\nimport { Auth0Provider } from \"./react-auth0-spa\";\r\nimport { navigate, setBasepath } from \"hookrouter\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./logic/state-management/store/store\";\r\nimport { loadingBarReducer } from \"react-redux-loading-bar\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/de';\r\n\r\nsetBasepath(process.env.PUBLIC_URL);\r\n\r\nconst onRedirectCallback = (appState) => {\r\n    navigate(\r\n        appState && appState.targetUrl\r\n            ? appState.targetUrl\r\n            : window.location.pathname\r\n    );\r\n};\r\n\r\nstore.injectReducer(\"loadingBar\", loadingBarReducer);\r\n\r\nmoment().locale(\"de\");\r\n\r\nlet config;\r\nif (process.env.NODE_ENV === \"development\") {\r\n    config = require(\"./auth_config.json\");\r\n} else {\r\n    config = require(\"./auth_config_public.json\");\r\n}\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Auth0Provider\r\n            domain={config.domain}\r\n            client_id={config.clientId}\r\n            redirect_uri={`${window.location.origin}/quotracker`}\r\n            audience={config.audience}\r\n            onRedirectCallback={onRedirectCallback}\r\n        >\r\n            <App/>\r\n        </Auth0Provider>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}